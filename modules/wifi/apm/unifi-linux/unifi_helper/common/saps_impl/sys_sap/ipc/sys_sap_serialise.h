/* This is an autogenerated file */
/* Tag: noCheckHeader */

/*    CONFIDENTIAL */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2008. All rights reserved. */

#ifndef __SYS_SAP_SERIALIZE_H__
#define __SYS_SAP_SERIALIZE_H__

#ifdef __cplusplus
extern "C" {
#endif

#include "sme_top_level_fsm/sme_top_level_fsm.h"

CsrUint16 serialise_unifi_sys_capabilities_req(CsrUint8** resultBuffer, void* appHandle);
CsrUint16 serialise_unifi_sys_configure_power_mode_req(CsrUint8** resultBuffer, unifi_LowPowerMode mode, CsrBool wakeHost);
CsrUint16 serialise_unifi_sys_eapol_req(CsrUint8** resultBuffer, void* appHandle, CsrUint8 subscriptionHandle, CsrUint16 frameLength, const CsrUint8 *frame, unifi_FrameFreeFunction freeFunction);
CsrUint16 serialise_unifi_sys_hip_req(CsrUint8** resultBuffer, CsrUint16 mlmeCommandLength, const CsrUint8 *mlmeCommand, CsrUint16 dataRef1Length, const CsrUint8 *dataRef1, CsrUint16 dataRef2Length, const CsrUint8 *dataRef2);
CsrUint16 serialise_unifi_sys_m4_transmit_req(CsrUint8** resultBuffer);
CsrUint16 serialise_unifi_sys_ma_unitdata_req(CsrUint8** resultBuffer, void* appHandle, CsrUint8 subscriptionHandle, CsrUint16 frameLength, const CsrUint8 *frame, unifi_FrameFreeFunction freeFunction, unifi_Priority priority, unifi_ServiceClass serviceClass, CsrUint32 reqIdentifier);
CsrUint16 serialise_unifi_sys_ma_unitdata_rsp(CsrUint8** resultBuffer, CsrUint8 subscriptionHandle, unifi_Status result);
CsrUint16 serialise_unifi_sys_ma_unitdata_subscribe_req(CsrUint8** resultBuffer, void* appHandle, unifi_Encapsulation encapsulation, CsrUint16 protocol, CsrUint32 oui);
CsrUint16 serialise_unifi_sys_ma_unitdata_unsubscribe_req(CsrUint8** resultBuffer, void* appHandle, CsrUint8 subscriptionHandle);
CsrUint16 serialise_unifi_sys_media_status_req(CsrUint8** resultBuffer, unifi_MediaStatus mediaStatus, CsrUint32 mediaTypeMask);
CsrUint16 serialise_unifi_sys_multicast_address_rsp(CsrUint8** resultBuffer, unifi_Status status, unifi_ListAction action, CsrUint8 getAddressesCount, const unifi_MACAddress *getAddresses);
CsrUint16 serialise_unifi_sys_port_configure_req(CsrUint8** resultBuffer, unifi_PortAction uncontrolledPortAction, unifi_PortAction controlledPortAction, const unifi_MACAddress *macAddress);
CsrUint16 serialise_unifi_sys_qos_control_req(CsrUint8** resultBuffer, unifi_QoSControl control);
CsrUint16 serialise_unifi_sys_resume_rsp(CsrUint8** resultBuffer, unifi_Status status);
CsrUint16 serialise_unifi_sys_suspend_rsp(CsrUint8** resultBuffer, unifi_Status status);
CsrUint16 serialise_unifi_sys_tclas_add_req(CsrUint8** resultBuffer, CsrUint16 tclasLength, const CsrUint8 *tclas);
CsrUint16 serialise_unifi_sys_tclas_del_req(CsrUint8** resultBuffer, CsrUint16 tclasLength, const CsrUint8 *tclas);
CsrUint16 serialise_unifi_sys_traffic_classification_req(CsrUint8** resultBuffer, unifi_TrafficType trafficType, CsrUint16 period);
CsrUint16 serialise_unifi_sys_traffic_config_req(CsrUint8** resultBuffer, unifi_TrafficConfigType trafficConfigType, const unifi_TrafficConfig *config);
CsrUint16 serialise_unifi_sys_wifi_off_req(CsrUint8** resultBuffer, void* appHandle);
CsrUint16 serialise_unifi_sys_wifi_off_rsp(CsrUint8** resultBuffer);
CsrUint16 serialise_unifi_sys_wifi_on_req(CsrUint8** resultBuffer, void* appHandle);
CsrUint16 serialise_unifi_sys_wifi_on_rsp(CsrUint8** resultBuffer, unifi_Status status, const unifi_MACAddress *stationMacAddress, const unifi_SmeVersions *smeVersions, CsrBool scheduledInterrupt);


#ifdef __cplusplus
}
#endif

#endif /* __SYS_SAP_SERIALIZE_H__ */
