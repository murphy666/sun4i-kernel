/* This is an autogenerated file */
/* Tag: noCheckHeader */

/*    CONFIDENTIAL */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2008. All rights reserved. */

#ifndef __CSR_WIFI_NME_SAP_SERIALIZE_H__
#define __CSR_WIFI_NME_SAP_SERIALIZE_H__

#ifdef __cplusplus
extern "C" {
#endif

#include "nme_top_level_fsm/nme_top_level_fsm.h"

CsrUint16 serialise_unifi_nme_association_complete_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, unifi_Status status, const unifi_ConnectionInfo *connectionInfo, unifi_IEEE80211Reason deauthReason);
CsrUint16 serialise_unifi_nme_association_start_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, const unifi_MACAddress *address, const unifi_SSID *ssid);
CsrUint16 serialise_unifi_nme_blacklist_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, unifi_ListAction action, CsrUint8 getAddressCount, const unifi_MACAddress *getAddresses);
CsrUint16 serialise_unifi_nme_certificate_validate_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, CsrUint8 validationId, CsrUint32 certificateLength, const CsrUint8 *certificate);
CsrUint16 serialise_unifi_nme_connect_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_connection_quality_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, const unifi_LinkQuality *linkQuality);
CsrUint16 serialise_unifi_nme_connection_status_get_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, unifi_ConnectionStatus connectionStatus);
CsrUint16 serialise_unifi_nme_disconnect_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_event_mask_set_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_get_value_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, const unifi_AppValue *appValue);
CsrUint16 serialise_unifi_nme_ibss_station_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, const unifi_MACAddress *address, CsrBool isconnected);
CsrUint16 serialise_unifi_nme_key_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, unifi_ListAction action);
CsrUint16 serialise_unifi_nme_media_status_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, unifi_MediaStatus mediaStatus, const unifi_ConnectionInfo *connectionInfo, unifi_IEEE80211Reason disassocReason, unifi_IEEE80211Reason deauthReason);
CsrUint16 serialise_unifi_nme_mib_get_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, CsrUint16 mibAttributeLength, const CsrUint8 *mibAttribute);
CsrUint16 serialise_unifi_nme_mib_get_next_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, CsrUint16 mibAttributeLength, const CsrUint8 *mibAttribute);
CsrUint16 serialise_unifi_nme_mib_set_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_mic_failure_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, CsrBool secondFailure, CsrUint16 count, const unifi_MACAddress *address, unifi_KeyType keyType, CsrUint16 keyId, const CsrUint16 *tsc);
CsrUint16 serialise_unifi_nme_multicast_address_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, unifi_ListAction action, CsrUint8 getAddressesCount, const unifi_MACAddress *getAddresses);
CsrUint16 serialise_unifi_nme_packet_filter_set_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_pmkid_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, unifi_ListAction action, CsrUint8 getPmkidsCount, const unifi_Pmkid *getPmkids);
CsrUint16 serialise_unifi_nme_pmkid_candidate_list_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, CsrUint8 pmkidCandidatesCount, const unifi_PmkidCandidate *pmkidCandidates);
CsrUint16 serialise_unifi_nme_profile_connect_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, CsrUint8 connectAttemptsCount, const unifi_ConnectAttempt *connectAttempts);
CsrUint16 serialise_unifi_nme_profile_delete_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_profile_delete_all_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_profile_disconnect_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, CsrUint8 connectAttemptsCount, const unifi_ConnectAttempt *connectAttempts);
CsrUint16 serialise_unifi_nme_profile_order_set_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_profile_set_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_profile_update_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, const unifi_Profile *profile);
CsrUint16 serialise_unifi_nme_restricted_access_disable_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_restricted_access_enable_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_roam_complete_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, unifi_Status status);
CsrUint16 serialise_unifi_nme_roam_start_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, unifi_RoamReason roamReason, unifi_IEEE80211Reason reason80211);
CsrUint16 serialise_unifi_nme_scan_full_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_scan_result_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, const unifi_ScanResult *result);
CsrUint16 serialise_unifi_nme_scan_results_flush_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_scan_results_get_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, CsrUint16 scanResultsCount, const unifi_ScanResult *scanResults);
CsrUint16 serialise_unifi_nme_set_value_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, unifi_AppValueId appValueId);
CsrUint16 serialise_unifi_nme_tspec_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, CsrUint32 transactionId, unifi_TspecResultCode tspecResultCode, CsrUint16 tspecLength, const CsrUint8 *tspec);
CsrUint16 serialise_unifi_nme_tspec_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, CsrUint32 transactionId, unifi_TspecResultCode tspecResultCode, CsrUint16 tspecLength, const CsrUint8 *tspec);
CsrUint16 serialise_unifi_nme_wifi_flightmode_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_wifi_off_ind(CsrUint8** resultBuffer, CsrUint16 appHandlesCount, void* *appHandles, unifi_ControlIndication controlIndication);
CsrUint16 serialise_unifi_nme_wifi_off_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_wifi_on_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);
CsrUint16 serialise_unifi_nme_wps_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status, const unifi_Profile *profile);
CsrUint16 serialise_unifi_nme_wps_cancel_cfm(CsrUint8** resultBuffer, void* appHandle, unifi_Status status);


#ifdef __cplusplus
}
#endif

#endif /* __CSR_WIFI_NME_SAP_SERIALIZE_H__ */
