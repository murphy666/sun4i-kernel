/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef NME_WPS_XML_SIGNALS_H
#define NME_WPS_XML_SIGNALS_H

#ifdef __cplusplus
extern "C" {
#endif

#define NME_WPS_TERMINATE_REQ_ID                                     0x6501
#define NME_WPS_TERMINATE_CFM_ID                                     0x6502
#define NME_WPS_DELAY_SCAN_EXPIRY_TIMER_ID                           0x6503


/* -------------------------- nme_wps_terminate_req -------------------------- */
typedef struct NmeWpsTerminateReq_Evt
{
    FsmEvent                        common;
} NmeWpsTerminateReq_Evt;

#define send_nme_wps_terminate_req(context, pid) \
{ \
    NmeWpsTerminateReq_Evt *evt = (NmeWpsTerminateReq_Evt*) CsrPmalloc(sizeof(NmeWpsTerminateReq_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, NME_WPS_TERMINATE_REQ_ID); \
}

#define send_nme_wps_terminate_req_external(context, pid) \
{ \
    NmeWpsTerminateReq_Evt *evt = (NmeWpsTerminateReq_Evt*) CsrPmalloc(sizeof(NmeWpsTerminateReq_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, NME_WPS_TERMINATE_REQ_ID); \
}

/* -------------------------- nme_wps_terminate_cfm -------------------------- */
typedef struct NmeWpsTerminateCfm_Evt
{
    FsmEvent                        common;
} NmeWpsTerminateCfm_Evt;

#define send_nme_wps_terminate_cfm(context, pid) \
{ \
    NmeWpsTerminateCfm_Evt *evt = (NmeWpsTerminateCfm_Evt*) CsrPmalloc(sizeof(NmeWpsTerminateCfm_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, NME_WPS_TERMINATE_CFM_ID); \
}

#define send_nme_wps_terminate_cfm_external(context, pid) \
{ \
    NmeWpsTerminateCfm_Evt *evt = (NmeWpsTerminateCfm_Evt*) CsrPmalloc(sizeof(NmeWpsTerminateCfm_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, NME_WPS_TERMINATE_CFM_ID); \
}



/* -------------------------- nme_wps_delay_scan_expiry_timer -------------------------- */
typedef struct NmeWpsDelayScanExpiryTimer_Evt
{
    FsmTimer                        common;
} NmeWpsDelayScanExpiryTimer_Evt;

#define send_nme_wps_delay_scan_expiry_timer(context, rettimerid, timeValue, timeExtraValue) \
{ \
    rettimerid = fsm_set_timer((context), (FsmTimer*)NULL, timeValue, timeExtraValue, NME_WPS_DELAY_SCAN_EXPIRY_TIMER_ID);\
}



#ifdef __cplusplus
}
#endif

#endif /* NME_WPS_XML_SIGNALS_H */
