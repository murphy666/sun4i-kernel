/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef NME_MGT_XML_SIGNALS_H
#define NME_MGT_XML_SIGNALS_H

#ifdef __cplusplus
extern "C" {
#endif

#define UNIFI_NME_SYS_HIP_REQ_ID                                     0x8020
#define UNIFI_NME_SYS_HIP_IND_ID                                     0x8021
#define UNIFI_NME_SYS_MA_UNITDATA_SUBSCRIBE_REQ_ID                   0x8022
#define UNIFI_NME_SYS_MA_UNITDATA_SUBSCRIBE_CFM_ID                   0x8023
#define UNIFI_NME_SYS_MA_UNITDATA_UNSUBSCRIBE_REQ_ID                 0x8024
#define UNIFI_NME_SYS_MA_UNITDATA_UNSUBSCRIBE_CFM_ID                 0x8025
#define UNIFI_NME_SYS_CAPABILITIES_REQ_ID                            0x8026
#define UNIFI_NME_SYS_CAPABILITIES_CFM_ID                            0x8027
#define UNIFI_NME_SYS_MA_UNITDATA_REQ_ID                             0x8028
#define UNIFI_NME_SYS_MA_UNITDATA_CFM_ID                             0x8029
#define UNIFI_NME_SYS_MA_UNITDATA_RSP_ID                             0x802A
#define UNIFI_NME_SYS_MA_UNITDATA_IND_ID                             0x802B
#define UNIFI_NME_SYS_EAPOL_REQ_ID                                   0x802C
#define UNIFI_NME_SYS_EAPOL_CFM_ID                                   0x802D
#define UNIFI_NME_MGT_WIFI_ON_REQ_ID                                 0x9001
#define UNIFI_NME_MGT_WIFI_ON_CFM_ID                                 0x9002
#define UNIFI_NME_MGT_WIFI_OFF_REQ_ID                                0x9003
#define UNIFI_NME_MGT_WIFI_OFF_CFM_ID                                0x9004
#define UNIFI_NME_MGT_WIFI_OFF_IND_ID                                0x9005
#define UNIFI_NME_MGT_WIFI_FLIGHTMODE_REQ_ID                         0x9006
#define UNIFI_NME_MGT_WIFI_FLIGHTMODE_CFM_ID                         0x9007
#define UNIFI_NME_MGT_SET_VALUE_REQ_ID                               0x9008
#define UNIFI_NME_MGT_SET_VALUE_CFM_ID                               0x9009
#define UNIFI_NME_MGT_GET_VALUE_REQ_ID                               0x900A
#define UNIFI_NME_MGT_GET_VALUE_CFM_ID                               0x900B
#define UNIFI_NME_MGT_MIB_SET_REQ_ID                                 0x900C
#define UNIFI_NME_MGT_MIB_SET_CFM_ID                                 0x900D
#define UNIFI_NME_MGT_MIB_GET_REQ_ID                                 0x900E
#define UNIFI_NME_MGT_MIB_GET_CFM_ID                                 0x900F
#define UNIFI_NME_MGT_MIB_GET_NEXT_REQ_ID                            0x9010
#define UNIFI_NME_MGT_MIB_GET_NEXT_CFM_ID                            0x9011
#define UNIFI_NME_MGT_SCAN_FULL_REQ_ID                               0x9012
#define UNIFI_NME_MGT_SCAN_FULL_CFM_ID                               0x9013
#define UNIFI_NME_MGT_SCAN_RESULTS_GET_REQ_ID                        0x9014
#define UNIFI_NME_MGT_SCAN_RESULTS_GET_CFM_ID                        0x9015
#define UNIFI_NME_MGT_SCAN_RESULT_IND_ID                             0x9016
#define UNIFI_NME_MGT_CONNECT_REQ_ID                                 0x9017
#define UNIFI_NME_MGT_CONNECT_CFM_ID                                 0x9018
#define UNIFI_NME_MGT_MEDIA_STATUS_IND_ID                            0x9019
#define UNIFI_NME_MGT_CONNECTION_QUALITY_IND_ID                      0x901A
#define UNIFI_NME_MGT_DISCONNECT_REQ_ID                              0x901B
#define UNIFI_NME_MGT_DISCONNECT_CFM_ID                              0x901C
#define UNIFI_NME_MGT_MULTICAST_ADDRESS_REQ_ID                       0x901D
#define UNIFI_NME_MGT_MULTICAST_ADDRESS_CFM_ID                       0x901E
#define UNIFI_NME_MGT_MIC_FAILURE_IND_ID                             0x901F
#define UNIFI_NME_MGT_PMKID_CANDIDATE_LIST_IND_ID                    0x9020
#define UNIFI_NME_MGT_PMKID_REQ_ID                                   0x9021
#define UNIFI_NME_MGT_PMKID_CFM_ID                                   0x9022
#define UNIFI_NME_MGT_KEY_REQ_ID                                     0x9023
#define UNIFI_NME_MGT_KEY_CFM_ID                                     0x9024
#define UNIFI_NME_MGT_PACKET_FILTER_SET_REQ_ID                       0x9025
#define UNIFI_NME_MGT_PACKET_FILTER_SET_CFM_ID                       0x9026
#define UNIFI_NME_MGT_TSPEC_REQ_ID                                   0x9027
#define UNIFI_NME_MGT_TSPEC_CFM_ID                                   0x9028
#define UNIFI_NME_MGT_TSPEC_IND_ID                                   0x9029
#define UNIFI_NME_MGT_SCAN_RESULTS_FLUSH_REQ_ID                      0x902A
#define UNIFI_NME_MGT_SCAN_RESULTS_FLUSH_CFM_ID                      0x902B
#define UNIFI_NME_MGT_BLACKLIST_REQ_ID                               0x902C
#define UNIFI_NME_MGT_BLACKLIST_CFM_ID                               0x902D
#define UNIFI_NME_MGT_ROAM_START_IND_ID                              0x902E
#define UNIFI_NME_MGT_ROAM_COMPLETE_IND_ID                           0x902F
#define UNIFI_NME_MGT_ASSOCIATION_START_IND_ID                       0x9030
#define UNIFI_NME_MGT_ASSOCIATION_COMPLETE_IND_ID                    0x9031
#define UNIFI_NME_MGT_IBSS_STATION_IND_ID                            0x9032
#define UNIFI_NME_MGT_EVENT_MASK_SET_REQ_ID                          0x9033
#define UNIFI_NME_MGT_EVENT_MASK_SET_CFM_ID                          0x9034
#define UNIFI_NME_MGT_RESTRICTED_ACCESS_ENABLE_REQ_ID                0x9035
#define UNIFI_NME_MGT_RESTRICTED_ACCESS_ENABLE_CFM_ID                0x9036
#define UNIFI_NME_MGT_RESTRICTED_ACCESS_DISABLE_REQ_ID               0x9037
#define UNIFI_NME_MGT_RESTRICTED_ACCESS_DISABLE_CFM_ID               0x9038


/* -------------------------- unifi_nme_mgt_association_complete_ind -------------------------- */
typedef struct UnifiNmeMgtAssociationCompleteInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_Status                    status;
    unifi_ConnectionInfo            connectionInfo;
    unifi_IEEE80211Reason           deauthReason;
} UnifiNmeMgtAssociationCompleteInd_Evt;

#define send_unifi_nme_mgt_association_complete_ind(context, pid, p_appHandlesCount, p_appHandles, p_status, p_connectionInfo, p_deauthReason) \
{ \
    UnifiNmeMgtAssociationCompleteInd_Evt *evt = (UnifiNmeMgtAssociationCompleteInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtAssociationCompleteInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->status               = p_status; \
    evt->connectionInfo       = p_connectionInfo; \
    evt->deauthReason         = p_deauthReason; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ASSOCIATION_COMPLETE_IND_ID); \
}

#define send_unifi_nme_mgt_association_complete_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_status, p_connectionInfo, p_deauthReason) \
{ \
    UnifiNmeMgtAssociationCompleteInd_Evt *evt = (UnifiNmeMgtAssociationCompleteInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtAssociationCompleteInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->status               = p_status; \
    evt->connectionInfo       = p_connectionInfo; \
    evt->deauthReason         = p_deauthReason; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ASSOCIATION_COMPLETE_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_association_start_ind -------------------------- */
typedef struct UnifiNmeMgtAssociationStartInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_MACAddress                address;
    unifi_SSID                      ssid;
} UnifiNmeMgtAssociationStartInd_Evt;

#define send_unifi_nme_mgt_association_start_ind(context, pid, p_appHandlesCount, p_appHandles, p_address, p_ssid) \
{ \
    UnifiNmeMgtAssociationStartInd_Evt *evt = (UnifiNmeMgtAssociationStartInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtAssociationStartInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->address              = p_address; \
    evt->ssid                 = p_ssid; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ASSOCIATION_START_IND_ID); \
}

#define send_unifi_nme_mgt_association_start_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_address, p_ssid) \
{ \
    UnifiNmeMgtAssociationStartInd_Evt *evt = (UnifiNmeMgtAssociationStartInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtAssociationStartInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->address              = p_address; \
    evt->ssid                 = p_ssid; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ASSOCIATION_START_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_blacklist_req -------------------------- */
typedef struct UnifiNmeMgtBlacklistReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_ListAction                action;
    CsrUint8                        setAddressCount;
    unifi_MACAddress               *setAddresses;
} UnifiNmeMgtBlacklistReq_Evt;

#define send_unifi_nme_mgt_blacklist_req(context, pid, p_appHandle, p_action, p_setAddressCount, p_setAddresses) \
{ \
    UnifiNmeMgtBlacklistReq_Evt *evt = (UnifiNmeMgtBlacklistReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtBlacklistReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->setAddressCount      = p_setAddressCount; \
    evt->setAddresses         = p_setAddresses; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_BLACKLIST_REQ_ID); \
}

#define send_unifi_nme_mgt_blacklist_req_external(context, pid, p_appHandle, p_action, p_setAddressCount, p_setAddresses) \
{ \
    UnifiNmeMgtBlacklistReq_Evt *evt = (UnifiNmeMgtBlacklistReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtBlacklistReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->setAddressCount      = p_setAddressCount; \
    evt->setAddresses         = p_setAddresses; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_BLACKLIST_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_blacklist_cfm -------------------------- */
typedef struct UnifiNmeMgtBlacklistCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    unifi_ListAction                action;
    CsrUint8                        getAddressCount;
    unifi_MACAddress               *getAddresses;
} UnifiNmeMgtBlacklistCfm_Evt;

#define send_unifi_nme_mgt_blacklist_cfm(context, pid, p_appHandle, p_status, p_action, p_getAddressCount, p_getAddresses) \
{ \
    UnifiNmeMgtBlacklistCfm_Evt *evt = (UnifiNmeMgtBlacklistCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtBlacklistCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    evt->getAddressCount      = p_getAddressCount; \
    evt->getAddresses         = p_getAddresses; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_BLACKLIST_CFM_ID); \
}

#define send_unifi_nme_mgt_blacklist_cfm_external(context, pid, p_appHandle, p_status, p_action, p_getAddressCount, p_getAddresses) \
{ \
    UnifiNmeMgtBlacklistCfm_Evt *evt = (UnifiNmeMgtBlacklistCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtBlacklistCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    evt->getAddressCount      = p_getAddressCount; \
    evt->getAddresses         = p_getAddresses; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_BLACKLIST_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_connect_req -------------------------- */
typedef struct UnifiNmeMgtConnectReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_ConnectionConfig          connectionConfig;
} UnifiNmeMgtConnectReq_Evt;

#define send_unifi_nme_mgt_connect_req(context, pid, p_appHandle, p_connectionConfig) \
{ \
    UnifiNmeMgtConnectReq_Evt *evt = (UnifiNmeMgtConnectReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtConnectReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->connectionConfig     = p_connectionConfig; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_CONNECT_REQ_ID); \
}

#define send_unifi_nme_mgt_connect_req_external(context, pid, p_appHandle, p_connectionConfig) \
{ \
    UnifiNmeMgtConnectReq_Evt *evt = (UnifiNmeMgtConnectReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtConnectReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->connectionConfig     = p_connectionConfig; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_CONNECT_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_connect_cfm -------------------------- */
typedef struct UnifiNmeMgtConnectCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtConnectCfm_Evt;

#define send_unifi_nme_mgt_connect_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtConnectCfm_Evt *evt = (UnifiNmeMgtConnectCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtConnectCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_CONNECT_CFM_ID); \
}

#define send_unifi_nme_mgt_connect_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtConnectCfm_Evt *evt = (UnifiNmeMgtConnectCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtConnectCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_CONNECT_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_connection_quality_ind -------------------------- */
typedef struct UnifiNmeMgtConnectionQualityInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_LinkQuality               linkQuality;
} UnifiNmeMgtConnectionQualityInd_Evt;

#define send_unifi_nme_mgt_connection_quality_ind(context, pid, p_appHandlesCount, p_appHandles, p_linkQuality) \
{ \
    UnifiNmeMgtConnectionQualityInd_Evt *evt = (UnifiNmeMgtConnectionQualityInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtConnectionQualityInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->linkQuality          = p_linkQuality; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_CONNECTION_QUALITY_IND_ID); \
}

#define send_unifi_nme_mgt_connection_quality_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_linkQuality) \
{ \
    UnifiNmeMgtConnectionQualityInd_Evt *evt = (UnifiNmeMgtConnectionQualityInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtConnectionQualityInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->linkQuality          = p_linkQuality; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_CONNECTION_QUALITY_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_disconnect_req -------------------------- */
typedef struct UnifiNmeMgtDisconnectReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} UnifiNmeMgtDisconnectReq_Evt;

#define send_unifi_nme_mgt_disconnect_req(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtDisconnectReq_Evt *evt = (UnifiNmeMgtDisconnectReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtDisconnectReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_DISCONNECT_REQ_ID); \
}

#define send_unifi_nme_mgt_disconnect_req_external(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtDisconnectReq_Evt *evt = (UnifiNmeMgtDisconnectReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtDisconnectReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_DISCONNECT_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_disconnect_cfm -------------------------- */
typedef struct UnifiNmeMgtDisconnectCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtDisconnectCfm_Evt;

#define send_unifi_nme_mgt_disconnect_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtDisconnectCfm_Evt *evt = (UnifiNmeMgtDisconnectCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtDisconnectCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_DISCONNECT_CFM_ID); \
}

#define send_unifi_nme_mgt_disconnect_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtDisconnectCfm_Evt *evt = (UnifiNmeMgtDisconnectCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtDisconnectCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_DISCONNECT_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_event_mask_set_req -------------------------- */
typedef struct UnifiNmeMgtEventMaskSetReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint32                       indMask;
} UnifiNmeMgtEventMaskSetReq_Evt;

#define send_unifi_nme_mgt_event_mask_set_req(context, pid, p_appHandle, p_indMask) \
{ \
    UnifiNmeMgtEventMaskSetReq_Evt *evt = (UnifiNmeMgtEventMaskSetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtEventMaskSetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->indMask              = p_indMask; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_EVENT_MASK_SET_REQ_ID); \
}

#define send_unifi_nme_mgt_event_mask_set_req_external(context, pid, p_appHandle, p_indMask) \
{ \
    UnifiNmeMgtEventMaskSetReq_Evt *evt = (UnifiNmeMgtEventMaskSetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtEventMaskSetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->indMask              = p_indMask; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_EVENT_MASK_SET_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_event_mask_set_cfm -------------------------- */
typedef struct UnifiNmeMgtEventMaskSetCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtEventMaskSetCfm_Evt;

#define send_unifi_nme_mgt_event_mask_set_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtEventMaskSetCfm_Evt *evt = (UnifiNmeMgtEventMaskSetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtEventMaskSetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_EVENT_MASK_SET_CFM_ID); \
}

#define send_unifi_nme_mgt_event_mask_set_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtEventMaskSetCfm_Evt *evt = (UnifiNmeMgtEventMaskSetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtEventMaskSetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_EVENT_MASK_SET_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_get_value_req -------------------------- */
typedef struct UnifiNmeMgtGetValueReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_AppValueId                appValueId;
} UnifiNmeMgtGetValueReq_Evt;

#define send_unifi_nme_mgt_get_value_req(context, pid, p_appHandle, p_appValueId) \
{ \
    UnifiNmeMgtGetValueReq_Evt *evt = (UnifiNmeMgtGetValueReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtGetValueReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->appValueId           = p_appValueId; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_GET_VALUE_REQ_ID); \
}

#define send_unifi_nme_mgt_get_value_req_external(context, pid, p_appHandle, p_appValueId) \
{ \
    UnifiNmeMgtGetValueReq_Evt *evt = (UnifiNmeMgtGetValueReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtGetValueReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->appValueId           = p_appValueId; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_GET_VALUE_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_get_value_cfm -------------------------- */
typedef struct UnifiNmeMgtGetValueCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    unifi_AppValue                  appValue;
} UnifiNmeMgtGetValueCfm_Evt;

#define send_unifi_nme_mgt_get_value_cfm(context, pid, p_appHandle, p_status, p_appValue) \
{ \
    UnifiNmeMgtGetValueCfm_Evt *evt = (UnifiNmeMgtGetValueCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtGetValueCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->appValue             = p_appValue; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_GET_VALUE_CFM_ID); \
}

#define send_unifi_nme_mgt_get_value_cfm_external(context, pid, p_appHandle, p_status, p_appValue) \
{ \
    UnifiNmeMgtGetValueCfm_Evt *evt = (UnifiNmeMgtGetValueCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtGetValueCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->appValue             = p_appValue; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_GET_VALUE_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_ibss_station_ind -------------------------- */
typedef struct UnifiNmeMgtIbssStationInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_MACAddress                address;
    CsrBool                         isconnected;
} UnifiNmeMgtIbssStationInd_Evt;

#define send_unifi_nme_mgt_ibss_station_ind(context, pid, p_appHandlesCount, p_appHandles, p_address, p_isconnected) \
{ \
    UnifiNmeMgtIbssStationInd_Evt *evt = (UnifiNmeMgtIbssStationInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtIbssStationInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->address              = p_address; \
    evt->isconnected          = p_isconnected; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_IBSS_STATION_IND_ID); \
}

#define send_unifi_nme_mgt_ibss_station_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_address, p_isconnected) \
{ \
    UnifiNmeMgtIbssStationInd_Evt *evt = (UnifiNmeMgtIbssStationInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtIbssStationInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->address              = p_address; \
    evt->isconnected          = p_isconnected; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_IBSS_STATION_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_key_req -------------------------- */
typedef struct UnifiNmeMgtKeyReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_ListAction                action;
    unifi_Key                       key;
} UnifiNmeMgtKeyReq_Evt;

#define send_unifi_nme_mgt_key_req(context, pid, p_appHandle, p_action, p_key) \
{ \
    UnifiNmeMgtKeyReq_Evt *evt = (UnifiNmeMgtKeyReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtKeyReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->key                  = p_key; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_KEY_REQ_ID); \
}

#define send_unifi_nme_mgt_key_req_external(context, pid, p_appHandle, p_action, p_key) \
{ \
    UnifiNmeMgtKeyReq_Evt *evt = (UnifiNmeMgtKeyReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtKeyReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->key                  = p_key; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_KEY_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_key_cfm -------------------------- */
typedef struct UnifiNmeMgtKeyCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    unifi_ListAction                action;
} UnifiNmeMgtKeyCfm_Evt;

#define send_unifi_nme_mgt_key_cfm(context, pid, p_appHandle, p_status, p_action) \
{ \
    UnifiNmeMgtKeyCfm_Evt *evt = (UnifiNmeMgtKeyCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtKeyCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_KEY_CFM_ID); \
}

#define send_unifi_nme_mgt_key_cfm_external(context, pid, p_appHandle, p_status, p_action) \
{ \
    UnifiNmeMgtKeyCfm_Evt *evt = (UnifiNmeMgtKeyCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtKeyCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_KEY_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_media_status_ind -------------------------- */
typedef struct UnifiNmeMgtMediaStatusInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_MediaStatus               mediaStatus;
    unifi_ConnectionInfo            connectionInfo;
    unifi_IEEE80211Reason           disassocReason;
    unifi_IEEE80211Reason           deauthReason;
} UnifiNmeMgtMediaStatusInd_Evt;

#define send_unifi_nme_mgt_media_status_ind(context, pid, p_appHandlesCount, p_appHandles, p_mediaStatus, p_connectionInfo, p_disassocReason, p_deauthReason) \
{ \
    UnifiNmeMgtMediaStatusInd_Evt *evt = (UnifiNmeMgtMediaStatusInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMediaStatusInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->mediaStatus          = p_mediaStatus; \
    evt->connectionInfo       = p_connectionInfo; \
    evt->disassocReason       = p_disassocReason; \
    evt->deauthReason         = p_deauthReason; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MEDIA_STATUS_IND_ID); \
}

#define send_unifi_nme_mgt_media_status_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_mediaStatus, p_connectionInfo, p_disassocReason, p_deauthReason) \
{ \
    UnifiNmeMgtMediaStatusInd_Evt *evt = (UnifiNmeMgtMediaStatusInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMediaStatusInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->mediaStatus          = p_mediaStatus; \
    evt->connectionInfo       = p_connectionInfo; \
    evt->disassocReason       = p_disassocReason; \
    evt->deauthReason         = p_deauthReason; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MEDIA_STATUS_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_mib_get_req -------------------------- */
typedef struct UnifiNmeMgtMibGetReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint16                       mibAttributeLength;
    CsrUint8                       *mibAttribute;
} UnifiNmeMgtMibGetReq_Evt;

#define send_unifi_nme_mgt_mib_get_req(context, pid, p_appHandle, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetReq_Evt *evt = (UnifiNmeMgtMibGetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_REQ_ID); \
}

#define send_unifi_nme_mgt_mib_get_req_external(context, pid, p_appHandle, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetReq_Evt *evt = (UnifiNmeMgtMibGetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_mib_get_cfm -------------------------- */
typedef struct UnifiNmeMgtMibGetCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    CsrUint16                       mibAttributeLength;
    CsrUint8                       *mibAttribute;
} UnifiNmeMgtMibGetCfm_Evt;

#define send_unifi_nme_mgt_mib_get_cfm(context, pid, p_appHandle, p_status, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetCfm_Evt *evt = (UnifiNmeMgtMibGetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_CFM_ID); \
}

#define send_unifi_nme_mgt_mib_get_cfm_external(context, pid, p_appHandle, p_status, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetCfm_Evt *evt = (UnifiNmeMgtMibGetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_mib_get_next_req -------------------------- */
typedef struct UnifiNmeMgtMibGetNextReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint16                       mibAttributeLength;
    CsrUint8                       *mibAttribute;
} UnifiNmeMgtMibGetNextReq_Evt;

#define send_unifi_nme_mgt_mib_get_next_req(context, pid, p_appHandle, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetNextReq_Evt *evt = (UnifiNmeMgtMibGetNextReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetNextReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_NEXT_REQ_ID); \
}

#define send_unifi_nme_mgt_mib_get_next_req_external(context, pid, p_appHandle, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetNextReq_Evt *evt = (UnifiNmeMgtMibGetNextReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetNextReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_NEXT_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_mib_get_next_cfm -------------------------- */
typedef struct UnifiNmeMgtMibGetNextCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    CsrUint16                       mibAttributeLength;
    CsrUint8                       *mibAttribute;
} UnifiNmeMgtMibGetNextCfm_Evt;

#define send_unifi_nme_mgt_mib_get_next_cfm(context, pid, p_appHandle, p_status, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetNextCfm_Evt *evt = (UnifiNmeMgtMibGetNextCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetNextCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_NEXT_CFM_ID); \
}

#define send_unifi_nme_mgt_mib_get_next_cfm_external(context, pid, p_appHandle, p_status, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibGetNextCfm_Evt *evt = (UnifiNmeMgtMibGetNextCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibGetNextCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_GET_NEXT_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_mib_set_req -------------------------- */
typedef struct UnifiNmeMgtMibSetReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint16                       mibAttributeLength;
    CsrUint8                       *mibAttribute;
} UnifiNmeMgtMibSetReq_Evt;

#define send_unifi_nme_mgt_mib_set_req(context, pid, p_appHandle, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibSetReq_Evt *evt = (UnifiNmeMgtMibSetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibSetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_SET_REQ_ID); \
}

#define send_unifi_nme_mgt_mib_set_req_external(context, pid, p_appHandle, p_mibAttributeLength, p_mibAttribute) \
{ \
    UnifiNmeMgtMibSetReq_Evt *evt = (UnifiNmeMgtMibSetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibSetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->mibAttributeLength   = p_mibAttributeLength; \
    evt->mibAttribute         = p_mibAttribute; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_SET_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_mib_set_cfm -------------------------- */
typedef struct UnifiNmeMgtMibSetCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtMibSetCfm_Evt;

#define send_unifi_nme_mgt_mib_set_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtMibSetCfm_Evt *evt = (UnifiNmeMgtMibSetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibSetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_SET_CFM_ID); \
}

#define send_unifi_nme_mgt_mib_set_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtMibSetCfm_Evt *evt = (UnifiNmeMgtMibSetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMibSetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIB_SET_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_mic_failure_ind -------------------------- */
typedef struct UnifiNmeMgtMicFailureInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    CsrBool                         secondFailure;
    CsrUint16                       count;
    unifi_MACAddress                address;
    unifi_KeyType                   keyType;
    CsrUint16                       keyId;
    CsrUint16                       tsc[4];
} UnifiNmeMgtMicFailureInd_Evt;

#define send_unifi_nme_mgt_mic_failure_ind(context, pid, p_appHandlesCount, p_appHandles, p_secondFailure, p_count, p_address, p_keyType, p_keyId, p_tsc) \
{ \
    UnifiNmeMgtMicFailureInd_Evt *evt = (UnifiNmeMgtMicFailureInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMicFailureInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->secondFailure        = p_secondFailure; \
    evt->count                = p_count; \
    evt->address              = p_address; \
    evt->keyType              = p_keyType; \
    evt->keyId                = p_keyId; \
    CsrMemCpy(evt->tsc, p_tsc, 4); \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIC_FAILURE_IND_ID); \
}

#define send_unifi_nme_mgt_mic_failure_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_secondFailure, p_count, p_address, p_keyType, p_keyId, p_tsc) \
{ \
    UnifiNmeMgtMicFailureInd_Evt *evt = (UnifiNmeMgtMicFailureInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMicFailureInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->secondFailure        = p_secondFailure; \
    evt->count                = p_count; \
    evt->address              = p_address; \
    evt->keyType              = p_keyType; \
    evt->keyId                = p_keyId; \
    CsrMemCpy(evt->tsc, p_tsc, 4); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MIC_FAILURE_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_multicast_address_req -------------------------- */
typedef struct UnifiNmeMgtMulticastAddressReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_ListAction                action;
    CsrUint8                        setAddressesCount;
    unifi_MACAddress               *setAddresses;
} UnifiNmeMgtMulticastAddressReq_Evt;

#define send_unifi_nme_mgt_multicast_address_req(context, pid, p_appHandle, p_action, p_setAddressesCount, p_setAddresses) \
{ \
    UnifiNmeMgtMulticastAddressReq_Evt *evt = (UnifiNmeMgtMulticastAddressReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMulticastAddressReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->setAddressesCount    = p_setAddressesCount; \
    evt->setAddresses         = p_setAddresses; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MULTICAST_ADDRESS_REQ_ID); \
}

#define send_unifi_nme_mgt_multicast_address_req_external(context, pid, p_appHandle, p_action, p_setAddressesCount, p_setAddresses) \
{ \
    UnifiNmeMgtMulticastAddressReq_Evt *evt = (UnifiNmeMgtMulticastAddressReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMulticastAddressReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->setAddressesCount    = p_setAddressesCount; \
    evt->setAddresses         = p_setAddresses; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MULTICAST_ADDRESS_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_multicast_address_cfm -------------------------- */
typedef struct UnifiNmeMgtMulticastAddressCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    unifi_ListAction                action;
    CsrUint8                        getAddressesCount;
    unifi_MACAddress               *getAddresses;
} UnifiNmeMgtMulticastAddressCfm_Evt;

#define send_unifi_nme_mgt_multicast_address_cfm(context, pid, p_appHandle, p_status, p_action, p_getAddressesCount, p_getAddresses) \
{ \
    UnifiNmeMgtMulticastAddressCfm_Evt *evt = (UnifiNmeMgtMulticastAddressCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMulticastAddressCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    evt->getAddressesCount    = p_getAddressesCount; \
    evt->getAddresses         = p_getAddresses; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MULTICAST_ADDRESS_CFM_ID); \
}

#define send_unifi_nme_mgt_multicast_address_cfm_external(context, pid, p_appHandle, p_status, p_action, p_getAddressesCount, p_getAddresses) \
{ \
    UnifiNmeMgtMulticastAddressCfm_Evt *evt = (UnifiNmeMgtMulticastAddressCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtMulticastAddressCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    evt->getAddressesCount    = p_getAddressesCount; \
    evt->getAddresses         = p_getAddresses; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_MULTICAST_ADDRESS_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_packet_filter_set_req -------------------------- */
typedef struct UnifiNmeMgtPacketFilterSetReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint16                       filterLength;
    CsrUint8                       *filter;
    unifi_PacketFilterMode          mode;
    unifi_IPV4Address               arpFilterAddress;
} UnifiNmeMgtPacketFilterSetReq_Evt;

#define send_unifi_nme_mgt_packet_filter_set_req(context, pid, p_appHandle, p_filterLength, p_filter, p_mode, p_arpFilterAddress) \
{ \
    UnifiNmeMgtPacketFilterSetReq_Evt *evt = (UnifiNmeMgtPacketFilterSetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPacketFilterSetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->filterLength         = p_filterLength; \
    evt->filter               = p_filter; \
    evt->mode                 = p_mode; \
    evt->arpFilterAddress     = p_arpFilterAddress; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PACKET_FILTER_SET_REQ_ID); \
}

#define send_unifi_nme_mgt_packet_filter_set_req_external(context, pid, p_appHandle, p_filterLength, p_filter, p_mode, p_arpFilterAddress) \
{ \
    UnifiNmeMgtPacketFilterSetReq_Evt *evt = (UnifiNmeMgtPacketFilterSetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPacketFilterSetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->filterLength         = p_filterLength; \
    evt->filter               = p_filter; \
    evt->mode                 = p_mode; \
    evt->arpFilterAddress     = p_arpFilterAddress; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PACKET_FILTER_SET_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_packet_filter_set_cfm -------------------------- */
typedef struct UnifiNmeMgtPacketFilterSetCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtPacketFilterSetCfm_Evt;

#define send_unifi_nme_mgt_packet_filter_set_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtPacketFilterSetCfm_Evt *evt = (UnifiNmeMgtPacketFilterSetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPacketFilterSetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PACKET_FILTER_SET_CFM_ID); \
}

#define send_unifi_nme_mgt_packet_filter_set_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtPacketFilterSetCfm_Evt *evt = (UnifiNmeMgtPacketFilterSetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPacketFilterSetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PACKET_FILTER_SET_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_pmkid_req -------------------------- */
typedef struct UnifiNmeMgtPmkidReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_ListAction                action;
    CsrUint8                        setPmkidsCount;
    unifi_Pmkid                    *setPmkids;
} UnifiNmeMgtPmkidReq_Evt;

#define send_unifi_nme_mgt_pmkid_req(context, pid, p_appHandle, p_action, p_setPmkidsCount, p_setPmkids) \
{ \
    UnifiNmeMgtPmkidReq_Evt *evt = (UnifiNmeMgtPmkidReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPmkidReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->setPmkidsCount       = p_setPmkidsCount; \
    evt->setPmkids            = p_setPmkids; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PMKID_REQ_ID); \
}

#define send_unifi_nme_mgt_pmkid_req_external(context, pid, p_appHandle, p_action, p_setPmkidsCount, p_setPmkids) \
{ \
    UnifiNmeMgtPmkidReq_Evt *evt = (UnifiNmeMgtPmkidReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPmkidReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->setPmkidsCount       = p_setPmkidsCount; \
    evt->setPmkids            = p_setPmkids; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PMKID_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_pmkid_cfm -------------------------- */
typedef struct UnifiNmeMgtPmkidCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    unifi_ListAction                action;
    CsrUint8                        getPmkidsCount;
    unifi_Pmkid                    *getPmkids;
} UnifiNmeMgtPmkidCfm_Evt;

#define send_unifi_nme_mgt_pmkid_cfm(context, pid, p_appHandle, p_status, p_action, p_getPmkidsCount, p_getPmkids) \
{ \
    UnifiNmeMgtPmkidCfm_Evt *evt = (UnifiNmeMgtPmkidCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPmkidCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    evt->getPmkidsCount       = p_getPmkidsCount; \
    evt->getPmkids            = p_getPmkids; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PMKID_CFM_ID); \
}

#define send_unifi_nme_mgt_pmkid_cfm_external(context, pid, p_appHandle, p_status, p_action, p_getPmkidsCount, p_getPmkids) \
{ \
    UnifiNmeMgtPmkidCfm_Evt *evt = (UnifiNmeMgtPmkidCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPmkidCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->action               = p_action; \
    evt->getPmkidsCount       = p_getPmkidsCount; \
    evt->getPmkids            = p_getPmkids; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PMKID_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_pmkid_candidate_list_ind -------------------------- */
typedef struct UnifiNmeMgtPmkidCandidateListInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    CsrUint8                        pmkidCandidatesCount;
    unifi_PmkidCandidate           *pmkidCandidates;
} UnifiNmeMgtPmkidCandidateListInd_Evt;

#define send_unifi_nme_mgt_pmkid_candidate_list_ind(context, pid, p_appHandlesCount, p_appHandles, p_pmkidCandidatesCount, p_pmkidCandidates) \
{ \
    UnifiNmeMgtPmkidCandidateListInd_Evt *evt = (UnifiNmeMgtPmkidCandidateListInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPmkidCandidateListInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->pmkidCandidatesCount = p_pmkidCandidatesCount; \
    evt->pmkidCandidates      = p_pmkidCandidates; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PMKID_CANDIDATE_LIST_IND_ID); \
}

#define send_unifi_nme_mgt_pmkid_candidate_list_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_pmkidCandidatesCount, p_pmkidCandidates) \
{ \
    UnifiNmeMgtPmkidCandidateListInd_Evt *evt = (UnifiNmeMgtPmkidCandidateListInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtPmkidCandidateListInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->pmkidCandidatesCount = p_pmkidCandidatesCount; \
    evt->pmkidCandidates      = p_pmkidCandidates; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_PMKID_CANDIDATE_LIST_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_restricted_access_disable_req -------------------------- */
typedef struct UnifiNmeMgtRestrictedAccessDisableReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} UnifiNmeMgtRestrictedAccessDisableReq_Evt;

#define send_unifi_nme_mgt_restricted_access_disable_req(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtRestrictedAccessDisableReq_Evt *evt = (UnifiNmeMgtRestrictedAccessDisableReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessDisableReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_DISABLE_REQ_ID); \
}

#define send_unifi_nme_mgt_restricted_access_disable_req_external(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtRestrictedAccessDisableReq_Evt *evt = (UnifiNmeMgtRestrictedAccessDisableReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessDisableReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_DISABLE_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_restricted_access_disable_cfm -------------------------- */
typedef struct UnifiNmeMgtRestrictedAccessDisableCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtRestrictedAccessDisableCfm_Evt;

#define send_unifi_nme_mgt_restricted_access_disable_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtRestrictedAccessDisableCfm_Evt *evt = (UnifiNmeMgtRestrictedAccessDisableCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessDisableCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_DISABLE_CFM_ID); \
}

#define send_unifi_nme_mgt_restricted_access_disable_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtRestrictedAccessDisableCfm_Evt *evt = (UnifiNmeMgtRestrictedAccessDisableCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessDisableCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_DISABLE_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_restricted_access_enable_req -------------------------- */
typedef struct UnifiNmeMgtRestrictedAccessEnableReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} UnifiNmeMgtRestrictedAccessEnableReq_Evt;

#define send_unifi_nme_mgt_restricted_access_enable_req(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtRestrictedAccessEnableReq_Evt *evt = (UnifiNmeMgtRestrictedAccessEnableReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessEnableReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_ENABLE_REQ_ID); \
}

#define send_unifi_nme_mgt_restricted_access_enable_req_external(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtRestrictedAccessEnableReq_Evt *evt = (UnifiNmeMgtRestrictedAccessEnableReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessEnableReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_ENABLE_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_restricted_access_enable_cfm -------------------------- */
typedef struct UnifiNmeMgtRestrictedAccessEnableCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtRestrictedAccessEnableCfm_Evt;

#define send_unifi_nme_mgt_restricted_access_enable_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtRestrictedAccessEnableCfm_Evt *evt = (UnifiNmeMgtRestrictedAccessEnableCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessEnableCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_ENABLE_CFM_ID); \
}

#define send_unifi_nme_mgt_restricted_access_enable_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtRestrictedAccessEnableCfm_Evt *evt = (UnifiNmeMgtRestrictedAccessEnableCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRestrictedAccessEnableCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_RESTRICTED_ACCESS_ENABLE_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_roam_complete_ind -------------------------- */
typedef struct UnifiNmeMgtRoamCompleteInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_Status                    status;
} UnifiNmeMgtRoamCompleteInd_Evt;

#define send_unifi_nme_mgt_roam_complete_ind(context, pid, p_appHandlesCount, p_appHandles, p_status) \
{ \
    UnifiNmeMgtRoamCompleteInd_Evt *evt = (UnifiNmeMgtRoamCompleteInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRoamCompleteInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ROAM_COMPLETE_IND_ID); \
}

#define send_unifi_nme_mgt_roam_complete_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_status) \
{ \
    UnifiNmeMgtRoamCompleteInd_Evt *evt = (UnifiNmeMgtRoamCompleteInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRoamCompleteInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ROAM_COMPLETE_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_roam_start_ind -------------------------- */
typedef struct UnifiNmeMgtRoamStartInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_RoamReason                roamReason;
    unifi_IEEE80211Reason           reason80211;
} UnifiNmeMgtRoamStartInd_Evt;

#define send_unifi_nme_mgt_roam_start_ind(context, pid, p_appHandlesCount, p_appHandles, p_roamReason, p_reason80211) \
{ \
    UnifiNmeMgtRoamStartInd_Evt *evt = (UnifiNmeMgtRoamStartInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRoamStartInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->roamReason           = p_roamReason; \
    evt->reason80211          = p_reason80211; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ROAM_START_IND_ID); \
}

#define send_unifi_nme_mgt_roam_start_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_roamReason, p_reason80211) \
{ \
    UnifiNmeMgtRoamStartInd_Evt *evt = (UnifiNmeMgtRoamStartInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtRoamStartInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->roamReason           = p_roamReason; \
    evt->reason80211          = p_reason80211; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_ROAM_START_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_scan_full_req -------------------------- */
typedef struct UnifiNmeMgtScanFullReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        ssidCount;
    unifi_SSID                     *ssid;
    unifi_MACAddress                bssid;
    CsrBool                         forceScan;
    unifi_BSSType                   bssType;
    unifi_ScanType                  scanType;
    CsrUint16                       channelListCount;
    CsrUint8                       *channelList;
    CsrUint16                       probeIeLength;
    CsrUint8                       *probeIe;
} UnifiNmeMgtScanFullReq_Evt;

#define send_unifi_nme_mgt_scan_full_req(context, pid, p_appHandle, p_ssidCount, p_ssid, p_bssid, p_forceScan, p_bssType, p_scanType, p_channelListCount, p_channelList, p_probeIeLength, p_probeIe) \
{ \
    UnifiNmeMgtScanFullReq_Evt *evt = (UnifiNmeMgtScanFullReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanFullReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->ssidCount            = p_ssidCount; \
    evt->ssid                 = p_ssid; \
    evt->bssid                = p_bssid; \
    evt->forceScan            = p_forceScan; \
    evt->bssType              = p_bssType; \
    evt->scanType             = p_scanType; \
    evt->channelListCount     = p_channelListCount; \
    evt->channelList          = p_channelList; \
    evt->probeIeLength        = p_probeIeLength; \
    evt->probeIe              = p_probeIe; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_FULL_REQ_ID); \
}

#define send_unifi_nme_mgt_scan_full_req_external(context, pid, p_appHandle, p_ssidCount, p_ssid, p_bssid, p_forceScan, p_bssType, p_scanType, p_channelListCount, p_channelList, p_probeIeLength, p_probeIe) \
{ \
    UnifiNmeMgtScanFullReq_Evt *evt = (UnifiNmeMgtScanFullReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanFullReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->ssidCount            = p_ssidCount; \
    evt->ssid                 = p_ssid; \
    evt->bssid                = p_bssid; \
    evt->forceScan            = p_forceScan; \
    evt->bssType              = p_bssType; \
    evt->scanType             = p_scanType; \
    evt->channelListCount     = p_channelListCount; \
    evt->channelList          = p_channelList; \
    evt->probeIeLength        = p_probeIeLength; \
    evt->probeIe              = p_probeIe; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_FULL_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_scan_full_cfm -------------------------- */
typedef struct UnifiNmeMgtScanFullCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtScanFullCfm_Evt;

#define send_unifi_nme_mgt_scan_full_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtScanFullCfm_Evt *evt = (UnifiNmeMgtScanFullCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanFullCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_FULL_CFM_ID); \
}

#define send_unifi_nme_mgt_scan_full_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtScanFullCfm_Evt *evt = (UnifiNmeMgtScanFullCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanFullCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_FULL_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_scan_result_ind -------------------------- */
typedef struct UnifiNmeMgtScanResultInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_ScanResult                result;
} UnifiNmeMgtScanResultInd_Evt;

#define send_unifi_nme_mgt_scan_result_ind(context, pid, p_appHandlesCount, p_appHandles, p_result) \
{ \
    UnifiNmeMgtScanResultInd_Evt *evt = (UnifiNmeMgtScanResultInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->result               = p_result; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULT_IND_ID); \
}

#define send_unifi_nme_mgt_scan_result_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_result) \
{ \
    UnifiNmeMgtScanResultInd_Evt *evt = (UnifiNmeMgtScanResultInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->result               = p_result; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULT_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_scan_results_flush_req -------------------------- */
typedef struct UnifiNmeMgtScanResultsFlushReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} UnifiNmeMgtScanResultsFlushReq_Evt;

#define send_unifi_nme_mgt_scan_results_flush_req(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtScanResultsFlushReq_Evt *evt = (UnifiNmeMgtScanResultsFlushReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsFlushReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_FLUSH_REQ_ID); \
}

#define send_unifi_nme_mgt_scan_results_flush_req_external(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtScanResultsFlushReq_Evt *evt = (UnifiNmeMgtScanResultsFlushReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsFlushReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_FLUSH_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_scan_results_flush_cfm -------------------------- */
typedef struct UnifiNmeMgtScanResultsFlushCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtScanResultsFlushCfm_Evt;

#define send_unifi_nme_mgt_scan_results_flush_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtScanResultsFlushCfm_Evt *evt = (UnifiNmeMgtScanResultsFlushCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsFlushCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_FLUSH_CFM_ID); \
}

#define send_unifi_nme_mgt_scan_results_flush_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtScanResultsFlushCfm_Evt *evt = (UnifiNmeMgtScanResultsFlushCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsFlushCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_FLUSH_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_scan_results_get_req -------------------------- */
typedef struct UnifiNmeMgtScanResultsGetReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} UnifiNmeMgtScanResultsGetReq_Evt;

#define send_unifi_nme_mgt_scan_results_get_req(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtScanResultsGetReq_Evt *evt = (UnifiNmeMgtScanResultsGetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsGetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_GET_REQ_ID); \
}

#define send_unifi_nme_mgt_scan_results_get_req_external(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtScanResultsGetReq_Evt *evt = (UnifiNmeMgtScanResultsGetReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsGetReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_GET_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_scan_results_get_cfm -------------------------- */
typedef struct UnifiNmeMgtScanResultsGetCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    CsrUint16                       scanResultsCount;
    unifi_ScanResult               *scanResults;
} UnifiNmeMgtScanResultsGetCfm_Evt;

#define send_unifi_nme_mgt_scan_results_get_cfm(context, pid, p_appHandle, p_status, p_scanResultsCount, p_scanResults) \
{ \
    UnifiNmeMgtScanResultsGetCfm_Evt *evt = (UnifiNmeMgtScanResultsGetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsGetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->scanResultsCount     = p_scanResultsCount; \
    evt->scanResults          = p_scanResults; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_GET_CFM_ID); \
}

#define send_unifi_nme_mgt_scan_results_get_cfm_external(context, pid, p_appHandle, p_status, p_scanResultsCount, p_scanResults) \
{ \
    UnifiNmeMgtScanResultsGetCfm_Evt *evt = (UnifiNmeMgtScanResultsGetCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtScanResultsGetCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->scanResultsCount     = p_scanResultsCount; \
    evt->scanResults          = p_scanResults; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SCAN_RESULTS_GET_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_set_value_req -------------------------- */
typedef struct UnifiNmeMgtSetValueReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_AppValue                  appValue;
} UnifiNmeMgtSetValueReq_Evt;

#define send_unifi_nme_mgt_set_value_req(context, pid, p_appHandle, p_appValue) \
{ \
    UnifiNmeMgtSetValueReq_Evt *evt = (UnifiNmeMgtSetValueReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtSetValueReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->appValue             = p_appValue; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SET_VALUE_REQ_ID); \
}

#define send_unifi_nme_mgt_set_value_req_external(context, pid, p_appHandle, p_appValue) \
{ \
    UnifiNmeMgtSetValueReq_Evt *evt = (UnifiNmeMgtSetValueReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtSetValueReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->appValue             = p_appValue; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SET_VALUE_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_set_value_cfm -------------------------- */
typedef struct UnifiNmeMgtSetValueCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    unifi_AppValueId                appValueId;
} UnifiNmeMgtSetValueCfm_Evt;

#define send_unifi_nme_mgt_set_value_cfm(context, pid, p_appHandle, p_status, p_appValueId) \
{ \
    UnifiNmeMgtSetValueCfm_Evt *evt = (UnifiNmeMgtSetValueCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtSetValueCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->appValueId           = p_appValueId; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SET_VALUE_CFM_ID); \
}

#define send_unifi_nme_mgt_set_value_cfm_external(context, pid, p_appHandle, p_status, p_appValueId) \
{ \
    UnifiNmeMgtSetValueCfm_Evt *evt = (UnifiNmeMgtSetValueCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtSetValueCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->appValueId           = p_appValueId; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_SET_VALUE_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_tspec_req -------------------------- */
typedef struct UnifiNmeMgtTspecReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_ListAction                action;
    CsrUint32                       transactionId;
    CsrBool                         strict;
    CsrUint8                        ctrlMask;
    CsrUint16                       tspecLength;
    CsrUint8                       *tspec;
    CsrUint16                       tclasLength;
    CsrUint8                       *tclas;
} UnifiNmeMgtTspecReq_Evt;

#define send_unifi_nme_mgt_tspec_req(context, pid, p_appHandle, p_action, p_transactionId, p_strict, p_ctrlMask, p_tspecLength, p_tspec, p_tclasLength, p_tclas) \
{ \
    UnifiNmeMgtTspecReq_Evt *evt = (UnifiNmeMgtTspecReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtTspecReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->transactionId        = p_transactionId; \
    evt->strict               = p_strict; \
    evt->ctrlMask             = p_ctrlMask; \
    evt->tspecLength          = p_tspecLength; \
    evt->tspec                = p_tspec; \
    evt->tclasLength          = p_tclasLength; \
    evt->tclas                = p_tclas; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_TSPEC_REQ_ID); \
}

#define send_unifi_nme_mgt_tspec_req_external(context, pid, p_appHandle, p_action, p_transactionId, p_strict, p_ctrlMask, p_tspecLength, p_tspec, p_tclasLength, p_tclas) \
{ \
    UnifiNmeMgtTspecReq_Evt *evt = (UnifiNmeMgtTspecReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtTspecReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->action               = p_action; \
    evt->transactionId        = p_transactionId; \
    evt->strict               = p_strict; \
    evt->ctrlMask             = p_ctrlMask; \
    evt->tspecLength          = p_tspecLength; \
    evt->tspec                = p_tspec; \
    evt->tclasLength          = p_tclasLength; \
    evt->tclas                = p_tclas; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_TSPEC_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_tspec_ind -------------------------- */
typedef struct UnifiNmeMgtTspecInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    CsrUint32                       transactionId;
    unifi_TspecResultCode           tspecResultCode;
    CsrUint16                       tspecLength;
    CsrUint8                       *tspec;
} UnifiNmeMgtTspecInd_Evt;

#define send_unifi_nme_mgt_tspec_ind(context, pid, p_appHandlesCount, p_appHandles, p_transactionId, p_tspecResultCode, p_tspecLength, p_tspec) \
{ \
    UnifiNmeMgtTspecInd_Evt *evt = (UnifiNmeMgtTspecInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtTspecInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->transactionId        = p_transactionId; \
    evt->tspecResultCode      = p_tspecResultCode; \
    evt->tspecLength          = p_tspecLength; \
    evt->tspec                = p_tspec; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_TSPEC_IND_ID); \
}

#define send_unifi_nme_mgt_tspec_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_transactionId, p_tspecResultCode, p_tspecLength, p_tspec) \
{ \
    UnifiNmeMgtTspecInd_Evt *evt = (UnifiNmeMgtTspecInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtTspecInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->transactionId        = p_transactionId; \
    evt->tspecResultCode      = p_tspecResultCode; \
    evt->tspecLength          = p_tspecLength; \
    evt->tspec                = p_tspec; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_TSPEC_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_tspec_cfm -------------------------- */
typedef struct UnifiNmeMgtTspecCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
    CsrUint32                       transactionId;
    unifi_TspecResultCode           tspecResultCode;
    CsrUint16                       tspecLength;
    CsrUint8                       *tspec;
} UnifiNmeMgtTspecCfm_Evt;

#define send_unifi_nme_mgt_tspec_cfm(context, pid, p_appHandle, p_status, p_transactionId, p_tspecResultCode, p_tspecLength, p_tspec) \
{ \
    UnifiNmeMgtTspecCfm_Evt *evt = (UnifiNmeMgtTspecCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtTspecCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->transactionId        = p_transactionId; \
    evt->tspecResultCode      = p_tspecResultCode; \
    evt->tspecLength          = p_tspecLength; \
    evt->tspec                = p_tspec; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_TSPEC_CFM_ID); \
}

#define send_unifi_nme_mgt_tspec_cfm_external(context, pid, p_appHandle, p_status, p_transactionId, p_tspecResultCode, p_tspecLength, p_tspec) \
{ \
    UnifiNmeMgtTspecCfm_Evt *evt = (UnifiNmeMgtTspecCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtTspecCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    evt->transactionId        = p_transactionId; \
    evt->tspecResultCode      = p_tspecResultCode; \
    evt->tspecLength          = p_tspecLength; \
    evt->tspec                = p_tspec; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_TSPEC_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_wifi_flightmode_req -------------------------- */
typedef struct UnifiNmeMgtWifiFlightmodeReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_MACAddress                address;
    CsrUint16                       mibFilesCount;
    unifi_DataBlock                *mibFiles;
} UnifiNmeMgtWifiFlightmodeReq_Evt;

#define send_unifi_nme_mgt_wifi_flightmode_req(context, pid, p_appHandle, p_address, p_mibFilesCount, p_mibFiles) \
{ \
    UnifiNmeMgtWifiFlightmodeReq_Evt *evt = (UnifiNmeMgtWifiFlightmodeReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiFlightmodeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->address              = p_address; \
    evt->mibFilesCount        = p_mibFilesCount; \
    evt->mibFiles             = p_mibFiles; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_FLIGHTMODE_REQ_ID); \
}

#define send_unifi_nme_mgt_wifi_flightmode_req_external(context, pid, p_appHandle, p_address, p_mibFilesCount, p_mibFiles) \
{ \
    UnifiNmeMgtWifiFlightmodeReq_Evt *evt = (UnifiNmeMgtWifiFlightmodeReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiFlightmodeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->address              = p_address; \
    evt->mibFilesCount        = p_mibFilesCount; \
    evt->mibFiles             = p_mibFiles; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_FLIGHTMODE_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_wifi_flightmode_cfm -------------------------- */
typedef struct UnifiNmeMgtWifiFlightmodeCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtWifiFlightmodeCfm_Evt;

#define send_unifi_nme_mgt_wifi_flightmode_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtWifiFlightmodeCfm_Evt *evt = (UnifiNmeMgtWifiFlightmodeCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiFlightmodeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_FLIGHTMODE_CFM_ID); \
}

#define send_unifi_nme_mgt_wifi_flightmode_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtWifiFlightmodeCfm_Evt *evt = (UnifiNmeMgtWifiFlightmodeCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiFlightmodeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_FLIGHTMODE_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_wifi_off_req -------------------------- */
typedef struct UnifiNmeMgtWifiOffReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} UnifiNmeMgtWifiOffReq_Evt;

#define send_unifi_nme_mgt_wifi_off_req(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtWifiOffReq_Evt *evt = (UnifiNmeMgtWifiOffReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOffReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_OFF_REQ_ID); \
}

#define send_unifi_nme_mgt_wifi_off_req_external(context, pid, p_appHandle) \
{ \
    UnifiNmeMgtWifiOffReq_Evt *evt = (UnifiNmeMgtWifiOffReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOffReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_OFF_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_wifi_off_ind -------------------------- */
typedef struct UnifiNmeMgtWifiOffInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       appHandlesCount;
    void*                          *appHandles;
    unifi_ControlIndication         controlIndication;
} UnifiNmeMgtWifiOffInd_Evt;

#define send_unifi_nme_mgt_wifi_off_ind(context, pid, p_appHandlesCount, p_appHandles, p_controlIndication) \
{ \
    UnifiNmeMgtWifiOffInd_Evt *evt = (UnifiNmeMgtWifiOffInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOffInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->controlIndication    = p_controlIndication; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_OFF_IND_ID); \
}

#define send_unifi_nme_mgt_wifi_off_ind_external(context, pid, p_appHandlesCount, p_appHandles, p_controlIndication) \
{ \
    UnifiNmeMgtWifiOffInd_Evt *evt = (UnifiNmeMgtWifiOffInd_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOffInd_Evt)); \
    evt->appHandlesCount      = p_appHandlesCount; \
    evt->appHandles           = p_appHandles; \
    evt->controlIndication    = p_controlIndication; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_OFF_IND_ID); \
}

/* -------------------------- unifi_nme_mgt_wifi_off_cfm -------------------------- */
typedef struct UnifiNmeMgtWifiOffCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtWifiOffCfm_Evt;

#define send_unifi_nme_mgt_wifi_off_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtWifiOffCfm_Evt *evt = (UnifiNmeMgtWifiOffCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOffCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_OFF_CFM_ID); \
}

#define send_unifi_nme_mgt_wifi_off_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtWifiOffCfm_Evt *evt = (UnifiNmeMgtWifiOffCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOffCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_OFF_CFM_ID); \
}

/* -------------------------- unifi_nme_mgt_wifi_on_req -------------------------- */
typedef struct UnifiNmeMgtWifiOnReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_MACAddress                address;
    CsrUint16                       mibFilesCount;
    unifi_DataBlock                *mibFiles;
} UnifiNmeMgtWifiOnReq_Evt;

#define send_unifi_nme_mgt_wifi_on_req(context, pid, p_appHandle, p_address, p_mibFilesCount, p_mibFiles) \
{ \
    UnifiNmeMgtWifiOnReq_Evt *evt = (UnifiNmeMgtWifiOnReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOnReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->address              = p_address; \
    evt->mibFilesCount        = p_mibFilesCount; \
    evt->mibFiles             = p_mibFiles; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_ON_REQ_ID); \
}

#define send_unifi_nme_mgt_wifi_on_req_external(context, pid, p_appHandle, p_address, p_mibFilesCount, p_mibFiles) \
{ \
    UnifiNmeMgtWifiOnReq_Evt *evt = (UnifiNmeMgtWifiOnReq_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOnReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->address              = p_address; \
    evt->mibFilesCount        = p_mibFilesCount; \
    evt->mibFiles             = p_mibFiles; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_ON_REQ_ID); \
}

/* -------------------------- unifi_nme_mgt_wifi_on_cfm -------------------------- */
typedef struct UnifiNmeMgtWifiOnCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    status;
} UnifiNmeMgtWifiOnCfm_Evt;

#define send_unifi_nme_mgt_wifi_on_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtWifiOnCfm_Evt *evt = (UnifiNmeMgtWifiOnCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOnCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_ON_CFM_ID); \
}

#define send_unifi_nme_mgt_wifi_on_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeMgtWifiOnCfm_Evt *evt = (UnifiNmeMgtWifiOnCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeMgtWifiOnCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_MGT_WIFI_ON_CFM_ID); \
}

/* -------------------------- unifi_nme_sys_capabilities_req -------------------------- */
typedef struct UnifiNmeSysCapabilitiesReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} UnifiNmeSysCapabilitiesReq_Evt;

#define send_unifi_nme_sys_capabilities_req(context, pid, p_appHandle) \
{ \
    UnifiNmeSysCapabilitiesReq_Evt *evt = (UnifiNmeSysCapabilitiesReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysCapabilitiesReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_CAPABILITIES_REQ_ID); \
}

#define send_unifi_nme_sys_capabilities_req_external(context, pid, p_appHandle) \
{ \
    UnifiNmeSysCapabilitiesReq_Evt *evt = (UnifiNmeSysCapabilitiesReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysCapabilitiesReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_CAPABILITIES_REQ_ID); \
}

/* -------------------------- unifi_nme_sys_capabilities_cfm -------------------------- */
typedef struct UnifiNmeSysCapabilitiesCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint16                       commandQueueSize;
    CsrUint16                       trafficQueueSize;
} UnifiNmeSysCapabilitiesCfm_Evt;

#define send_unifi_nme_sys_capabilities_cfm(context, pid, p_appHandle, p_commandQueueSize, p_trafficQueueSize) \
{ \
    UnifiNmeSysCapabilitiesCfm_Evt *evt = (UnifiNmeSysCapabilitiesCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysCapabilitiesCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->commandQueueSize     = p_commandQueueSize; \
    evt->trafficQueueSize     = p_trafficQueueSize; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_CAPABILITIES_CFM_ID); \
}

#define send_unifi_nme_sys_capabilities_cfm_external(context, pid, p_appHandle, p_commandQueueSize, p_trafficQueueSize) \
{ \
    UnifiNmeSysCapabilitiesCfm_Evt *evt = (UnifiNmeSysCapabilitiesCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysCapabilitiesCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->commandQueueSize     = p_commandQueueSize; \
    evt->trafficQueueSize     = p_trafficQueueSize; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_CAPABILITIES_CFM_ID); \
}

/* -------------------------- unifi_nme_sys_eapol_req -------------------------- */
typedef struct UnifiNmeSysEapolReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    CsrUint16                       frameLength;
    CsrUint8                       *frame;
    unifi_FrameFreeFunction         freeFunction;
} UnifiNmeSysEapolReq_Evt;

#define send_unifi_nme_sys_eapol_req(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction) \
{ \
    UnifiNmeSysEapolReq_Evt *evt = (UnifiNmeSysEapolReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysEapolReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_EAPOL_REQ_ID); \
}

#define send_unifi_nme_sys_eapol_req_external(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction) \
{ \
    UnifiNmeSysEapolReq_Evt *evt = (UnifiNmeSysEapolReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysEapolReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_EAPOL_REQ_ID); \
}

/* -------------------------- unifi_nme_sys_eapol_cfm -------------------------- */
typedef struct UnifiNmeSysEapolCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_EapolRc                   result;
} UnifiNmeSysEapolCfm_Evt;

#define send_unifi_nme_sys_eapol_cfm(context, pid, p_appHandle, p_result) \
{ \
    UnifiNmeSysEapolCfm_Evt *evt = (UnifiNmeSysEapolCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysEapolCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_EAPOL_CFM_ID); \
}

#define send_unifi_nme_sys_eapol_cfm_external(context, pid, p_appHandle, p_result) \
{ \
    UnifiNmeSysEapolCfm_Evt *evt = (UnifiNmeSysEapolCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysEapolCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_EAPOL_CFM_ID); \
}

/* -------------------------- unifi_nme_sys_hip_req -------------------------- */
typedef struct UnifiNmeSysHipReq_Evt
{
    FsmEvent                        common;
    CsrUint16                       mlmeCommandLength;
    CsrUint8                       *mlmeCommand;
    CsrUint16                       dataRef1Length;
    CsrUint8                       *dataRef1;
    CsrUint16                       dataRef2Length;
    CsrUint8                       *dataRef2;
} UnifiNmeSysHipReq_Evt;

#define send_unifi_nme_sys_hip_req(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    UnifiNmeSysHipReq_Evt *evt = (UnifiNmeSysHipReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysHipReq_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_HIP_REQ_ID); \
}

#define send_unifi_nme_sys_hip_req_external(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    UnifiNmeSysHipReq_Evt *evt = (UnifiNmeSysHipReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysHipReq_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_HIP_REQ_ID); \
}

/* -------------------------- unifi_nme_sys_hip_ind -------------------------- */
typedef struct UnifiNmeSysHipInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       mlmeCommandLength;
    CsrUint8                       *mlmeCommand;
    CsrUint16                       dataRef1Length;
    CsrUint8                       *dataRef1;
    CsrUint16                       dataRef2Length;
    CsrUint8                       *dataRef2;
} UnifiNmeSysHipInd_Evt;

#define send_unifi_nme_sys_hip_ind(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    UnifiNmeSysHipInd_Evt *evt = (UnifiNmeSysHipInd_Evt*) CsrPmalloc(sizeof(UnifiNmeSysHipInd_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_HIP_IND_ID); \
}

#define send_unifi_nme_sys_hip_ind_external(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    UnifiNmeSysHipInd_Evt *evt = (UnifiNmeSysHipInd_Evt*) CsrPmalloc(sizeof(UnifiNmeSysHipInd_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_HIP_IND_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_req -------------------------- */
typedef struct UnifiNmeSysMaUnitdataReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    CsrUint16                       frameLength;
    CsrUint8                       *frame;
    unifi_FrameFreeFunction         freeFunction;
    unifi_Priority                  priority;
    unifi_ServiceClass              serviceClass;
    CsrUint32                       reqIdentifier;
} UnifiNmeSysMaUnitdataReq_Evt;

#define send_unifi_nme_sys_ma_unitdata_req(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_priority, p_serviceClass, p_reqIdentifier) \
{ \
    UnifiNmeSysMaUnitdataReq_Evt *evt = (UnifiNmeSysMaUnitdataReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_REQ_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_req_external(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_priority, p_serviceClass, p_reqIdentifier) \
{ \
    UnifiNmeSysMaUnitdataReq_Evt *evt = (UnifiNmeSysMaUnitdataReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_REQ_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_ind -------------------------- */
typedef struct UnifiNmeSysMaUnitdataInd_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    CsrUint16                       frameLength;
    CsrUint8                       *frame;
    unifi_FrameFreeFunction         freeFunction;
    unifi_ReceptionStatus           receptionStatus;
    unifi_Priority                  priority;
    unifi_ServiceClass              serviceClass;
} UnifiNmeSysMaUnitdataInd_Evt;

#define send_unifi_nme_sys_ma_unitdata_ind(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_receptionStatus, p_priority, p_serviceClass) \
{ \
    UnifiNmeSysMaUnitdataInd_Evt *evt = (UnifiNmeSysMaUnitdataInd_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataInd_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->receptionStatus      = p_receptionStatus; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_IND_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_ind_external(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_receptionStatus, p_priority, p_serviceClass) \
{ \
    UnifiNmeSysMaUnitdataInd_Evt *evt = (UnifiNmeSysMaUnitdataInd_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataInd_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->receptionStatus      = p_receptionStatus; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_IND_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_rsp -------------------------- */
typedef struct UnifiNmeSysMaUnitdataRsp_Evt
{
    FsmEvent                        common;
    CsrUint8                        subscriptionHandle;
    unifi_Status                    result;
} UnifiNmeSysMaUnitdataRsp_Evt;

#define send_unifi_nme_sys_ma_unitdata_rsp(context, pid, p_subscriptionHandle, p_result) \
{ \
    UnifiNmeSysMaUnitdataRsp_Evt *evt = (UnifiNmeSysMaUnitdataRsp_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataRsp_Evt)); \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->result               = p_result; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_RSP_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_rsp_external(context, pid, p_subscriptionHandle, p_result) \
{ \
    UnifiNmeSysMaUnitdataRsp_Evt *evt = (UnifiNmeSysMaUnitdataRsp_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataRsp_Evt)); \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->result               = p_result; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_RSP_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_cfm -------------------------- */
typedef struct UnifiNmeSysMaUnitdataCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    result;
    unifi_TransmissionStatus        transmissionStatus;
    unifi_Priority                  providedPriority;
    unifi_ServiceClass              providedServiceClass;
    CsrUint32                       reqIdentifier;
} UnifiNmeSysMaUnitdataCfm_Evt;

#define send_unifi_nme_sys_ma_unitdata_cfm(context, pid, p_appHandle, p_result, p_transmissionStatus, p_providedPriority, p_providedServiceClass, p_reqIdentifier) \
{ \
    UnifiNmeSysMaUnitdataCfm_Evt *evt = (UnifiNmeSysMaUnitdataCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    evt->transmissionStatus   = p_transmissionStatus; \
    evt->providedPriority     = p_providedPriority; \
    evt->providedServiceClass = p_providedServiceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_CFM_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_cfm_external(context, pid, p_appHandle, p_result, p_transmissionStatus, p_providedPriority, p_providedServiceClass, p_reqIdentifier) \
{ \
    UnifiNmeSysMaUnitdataCfm_Evt *evt = (UnifiNmeSysMaUnitdataCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    evt->transmissionStatus   = p_transmissionStatus; \
    evt->providedPriority     = p_providedPriority; \
    evt->providedServiceClass = p_providedServiceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_CFM_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_subscribe_req -------------------------- */
typedef struct UnifiNmeSysMaUnitdataSubscribeReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Encapsulation             encapsulation;
    CsrUint16                       protocol;
    CsrUint32                       oui;
} UnifiNmeSysMaUnitdataSubscribeReq_Evt;

#define send_unifi_nme_sys_ma_unitdata_subscribe_req(context, pid, p_appHandle, p_encapsulation, p_protocol, p_oui) \
{ \
    UnifiNmeSysMaUnitdataSubscribeReq_Evt *evt = (UnifiNmeSysMaUnitdataSubscribeReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataSubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->encapsulation        = p_encapsulation; \
    evt->protocol             = p_protocol; \
    evt->oui                  = p_oui; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_SUBSCRIBE_REQ_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_subscribe_req_external(context, pid, p_appHandle, p_encapsulation, p_protocol, p_oui) \
{ \
    UnifiNmeSysMaUnitdataSubscribeReq_Evt *evt = (UnifiNmeSysMaUnitdataSubscribeReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataSubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->encapsulation        = p_encapsulation; \
    evt->protocol             = p_protocol; \
    evt->oui                  = p_oui; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_SUBSCRIBE_REQ_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_subscribe_cfm -------------------------- */
typedef struct UnifiNmeSysMaUnitdataSubscribeCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    unifi_SubscriptionResult        status;
    CsrUint16                       allocOffset;
} UnifiNmeSysMaUnitdataSubscribeCfm_Evt;

#define send_unifi_nme_sys_ma_unitdata_subscribe_cfm(context, pid, p_appHandle, p_subscriptionHandle, p_status, p_allocOffset) \
{ \
    UnifiNmeSysMaUnitdataSubscribeCfm_Evt *evt = (UnifiNmeSysMaUnitdataSubscribeCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataSubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->status               = p_status; \
    evt->allocOffset          = p_allocOffset; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_SUBSCRIBE_CFM_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_subscribe_cfm_external(context, pid, p_appHandle, p_subscriptionHandle, p_status, p_allocOffset) \
{ \
    UnifiNmeSysMaUnitdataSubscribeCfm_Evt *evt = (UnifiNmeSysMaUnitdataSubscribeCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataSubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->status               = p_status; \
    evt->allocOffset          = p_allocOffset; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_SUBSCRIBE_CFM_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_unsubscribe_req -------------------------- */
typedef struct UnifiNmeSysMaUnitdataUnsubscribeReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
} UnifiNmeSysMaUnitdataUnsubscribeReq_Evt;

#define send_unifi_nme_sys_ma_unitdata_unsubscribe_req(context, pid, p_appHandle, p_subscriptionHandle) \
{ \
    UnifiNmeSysMaUnitdataUnsubscribeReq_Evt *evt = (UnifiNmeSysMaUnitdataUnsubscribeReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataUnsubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_UNSUBSCRIBE_REQ_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_unsubscribe_req_external(context, pid, p_appHandle, p_subscriptionHandle) \
{ \
    UnifiNmeSysMaUnitdataUnsubscribeReq_Evt *evt = (UnifiNmeSysMaUnitdataUnsubscribeReq_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataUnsubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_UNSUBSCRIBE_REQ_ID); \
}

/* -------------------------- unifi_nme_sys_ma_unitdata_unsubscribe_cfm -------------------------- */
typedef struct UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_SubscriptionResult        status;
} UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt;

#define send_unifi_nme_sys_ma_unitdata_unsubscribe_cfm(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt *evt = (UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_UNSUBSCRIBE_CFM_ID); \
}

#define send_unifi_nme_sys_ma_unitdata_unsubscribe_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt *evt = (UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt*) CsrPmalloc(sizeof(UnifiNmeSysMaUnitdataUnsubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_NME_SYS_MA_UNITDATA_UNSUBSCRIBE_CFM_ID); \
}





#ifdef __cplusplus
}
#endif

#endif /* NME_MGT_XML_SIGNALS_H */
