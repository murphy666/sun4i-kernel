/* This is an autogenerated file */
/* Tag: noCheckHeader */

/*    CONFIDENTIAL */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2008. All rights reserved. */

#ifndef NMEIO_SIGNAL_TRACE_H
#define NMEIO_SIGNAL_TRACE_H

#ifdef __cplusplus
extern "C" {
#endif

#include "nme_top_level_fsm/nme_top_level_fsm.h"


#ifdef SME_TRACE_ENABLE

extern void trace_UnifiNmeCertificateValidateInd(const char* text, const FsmContext* context, const UnifiNmeCertificateValidateInd_Evt* evt);
extern void trace_UnifiNmeCertificateValidateRsp(const char* text, const FsmContext* context, const UnifiNmeCertificateValidateRsp_Evt* evt);
extern void trace_UnifiNmeConnectionStatusGetReq(const char* text, const FsmContext* context, const UnifiNmeConnectionStatusGetReq_Evt* evt);
extern void trace_UnifiNmeConnectionStatusGetCfm(const char* text, const FsmContext* context, const UnifiNmeConnectionStatusGetCfm_Evt* evt);
extern void trace_UnifiNmeProfileConnectReq(const char* text, const FsmContext* context, const UnifiNmeProfileConnectReq_Evt* evt);
extern void trace_UnifiNmeProfileConnectCfm(const char* text, const FsmContext* context, const UnifiNmeProfileConnectCfm_Evt* evt);
extern void trace_UnifiNmeProfileDeleteReq(const char* text, const FsmContext* context, const UnifiNmeProfileDeleteReq_Evt* evt);
extern void trace_UnifiNmeProfileDeleteCfm(const char* text, const FsmContext* context, const UnifiNmeProfileDeleteCfm_Evt* evt);
extern void trace_UnifiNmeProfileDeleteAllReq(const char* text, const FsmContext* context, const UnifiNmeProfileDeleteAllReq_Evt* evt);
extern void trace_UnifiNmeProfileDeleteAllCfm(const char* text, const FsmContext* context, const UnifiNmeProfileDeleteAllCfm_Evt* evt);
extern void trace_UnifiNmeProfileDisconnectInd(const char* text, const FsmContext* context, const UnifiNmeProfileDisconnectInd_Evt* evt);
extern void trace_UnifiNmeProfileOrderSetReq(const char* text, const FsmContext* context, const UnifiNmeProfileOrderSetReq_Evt* evt);
extern void trace_UnifiNmeProfileOrderSetCfm(const char* text, const FsmContext* context, const UnifiNmeProfileOrderSetCfm_Evt* evt);
extern void trace_UnifiNmeProfileSetReq(const char* text, const FsmContext* context, const UnifiNmeProfileSetReq_Evt* evt);
extern void trace_UnifiNmeProfileSetCfm(const char* text, const FsmContext* context, const UnifiNmeProfileSetCfm_Evt* evt);
extern void trace_UnifiNmeProfileUpdateInd(const char* text, const FsmContext* context, const UnifiNmeProfileUpdateInd_Evt* evt);
extern void trace_UnifiNmeWpsReq(const char* text, const FsmContext* context, const UnifiNmeWpsReq_Evt* evt);
extern void trace_UnifiNmeWpsCfm(const char* text, const FsmContext* context, const UnifiNmeWpsCfm_Evt* evt);
extern void trace_UnifiNmeWpsCancelReq(const char* text, const FsmContext* context, const UnifiNmeWpsCancelReq_Evt* evt);
extern void trace_UnifiNmeWpsCancelCfm(const char* text, const FsmContext* context, const UnifiNmeWpsCancelCfm_Evt* evt);
extern void trace_NmeCoreStartReq(const char* text, const FsmContext* context, const NmeCoreStartReq_Evt* evt);
extern void trace_NmeCoreStartCfm(const char* text, const FsmContext* context, const NmeCoreStartCfm_Evt* evt);
extern void trace_NmeCoreStopReq(const char* text, const FsmContext* context, const NmeCoreStopReq_Evt* evt);
extern void trace_NmeCoreStopCfm(const char* text, const FsmContext* context, const NmeCoreStopCfm_Evt* evt);
extern void trace_NmeSecurityAbortInd(const char* text, const FsmContext* context, const NmeSecurityAbortInd_Evt* evt);
extern void trace_NmeSecurityCompleteInd(const char* text, const FsmContext* context, const NmeSecurityCompleteInd_Evt* evt);
extern void trace_NmeSecurityKeysInstalledInd(const char* text, const FsmContext* context, const NmeSecurityKeysInstalledInd_Evt* evt);
extern void trace_NmeSecurityLibabortInd(const char* text, const FsmContext* context, const NmeSecurityLibabortInd_Evt* evt);
extern void trace_NmeSecurityLibsetcertificatevalidationInd(const char* text, const FsmContext* context, const NmeSecurityLibsetcertificatevalidationInd_Evt* evt);
extern void trace_NmeSecurityLibsetkeyInd(const char* text, const FsmContext* context, const NmeSecurityLibsetkeyInd_Evt* evt);
extern void trace_NmeSecurityLibsetpacInd(const char* text, const FsmContext* context, const NmeSecurityLibsetpacInd_Evt* evt);
extern void trace_NmeSecurityLibsetsessionInd(const char* text, const FsmContext* context, const NmeSecurityLibsetsessionInd_Evt* evt);
extern void trace_NmeSecurityLibwpsdoneInd(const char* text, const FsmContext* context, const NmeSecurityLibwpsdoneInd_Evt* evt);
extern void trace_NmeSecurityPreconnectReq(const char* text, const FsmContext* context, const NmeSecurityPreconnectReq_Evt* evt);
extern void trace_NmeSecurityPreconnectCfm(const char* text, const FsmContext* context, const NmeSecurityPreconnectCfm_Evt* evt);
extern void trace_NmeSecurityPrewpsReq(const char* text, const FsmContext* context, const NmeSecurityPrewpsReq_Evt* evt);
extern void trace_NmeSecurityPrewpsCfm(const char* text, const FsmContext* context, const NmeSecurityPrewpsCfm_Evt* evt);
extern void trace_NmeSecurityRestartReq(const char* text, const FsmContext* context, const NmeSecurityRestartReq_Evt* evt);
extern void trace_NmeSecurityRestartCfm(const char* text, const FsmContext* context, const NmeSecurityRestartCfm_Evt* evt);
extern void trace_NmeSecurityStartReq(const char* text, const FsmContext* context, const NmeSecurityStartReq_Evt* evt);
extern void trace_NmeSecurityStartCfm(const char* text, const FsmContext* context, const NmeSecurityStartCfm_Evt* evt);
extern void trace_NmeSecurityStopReq(const char* text, const FsmContext* context, const NmeSecurityStopReq_Evt* evt);
extern void trace_NmeSecurityStopCfm(const char* text, const FsmContext* context, const NmeSecurityStopCfm_Evt* evt);
extern void trace_NmeSecurityTerminateReq(const char* text, const FsmContext* context, const NmeSecurityTerminateReq_Evt* evt);
extern void trace_NmeSecurityTerminateCfm(const char* text, const FsmContext* context, const NmeSecurityTerminateCfm_Evt* evt);
extern void trace_NmeSecurityEapTimer(const char* text, const FsmContext* context, const NmeSecurityEapTimer_Evt* evt);
extern void trace_NmeConnMgrDisconnectReq(const char* text, const FsmContext* context, const NmeConnMgrDisconnectReq_Evt* evt);
extern void trace_NmeConnMgrDisconnectCfm(const char* text, const FsmContext* context, const NmeConnMgrDisconnectCfm_Evt* evt);
extern void trace_NmeConnMgrTerminateReq(const char* text, const FsmContext* context, const NmeConnMgrTerminateReq_Evt* evt);
extern void trace_NmeConnMgrTerminateCfm(const char* text, const FsmContext* context, const NmeConnMgrTerminateCfm_Evt* evt);
extern void trace_NmeWpsTerminateReq(const char* text, const FsmContext* context, const NmeWpsTerminateReq_Evt* evt);
extern void trace_NmeWpsTerminateCfm(const char* text, const FsmContext* context, const NmeWpsTerminateCfm_Evt* evt);
extern void trace_NmeWpsDelayScanExpiryTimer(const char* text, const FsmContext* context, const NmeWpsDelayScanExpiryTimer_Evt* evt);
extern void trace_NmeNsConnectInd(const char* text, const FsmContext* context, const NmeNsConnectInd_Evt* evt);
extern void trace_NmeNsDisconnectInd(const char* text, const FsmContext* context, const NmeNsDisconnectInd_Evt* evt);


#endif /* SME_TRACE_ENABLE */

#ifdef __cplusplus
}
#endif

#endif /* NMEIO_SIGNAL_TRACE_H */
