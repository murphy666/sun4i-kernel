/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef PALDATA_XML_SIGNALS_H
#define PALDATA_XML_SIGNALS_H

#ifdef __cplusplus
extern "C" {
#endif

#define PAL_ACL_DATA_REQ_ID                                          0x2550
#define PAL_ACL_DATA_IND_ID                                          0x2551
#define PALDATA_SYS_HIP_REQ_ID                                       0x8020
#define PALDATA_SYS_HIP_IND_ID                                       0x8021
#define PALDATA_SYS_MA_UNITDATA_SUBSCRIBE_REQ_ID                     0x8022
#define PALDATA_SYS_MA_UNITDATA_SUBSCRIBE_CFM_ID                     0x8023
#define PALDATA_SYS_MA_UNITDATA_UNSUBSCRIBE_REQ_ID                   0x8024
#define PALDATA_SYS_MA_UNITDATA_UNSUBSCRIBE_CFM_ID                   0x8025
#define PALDATA_SYS_CAPABILITIES_REQ_ID                              0x8026
#define PALDATA_SYS_CAPABILITIES_CFM_ID                              0x8027
#define PALDATA_SYS_MA_UNITDATA_REQ_ID                               0x8028
#define PALDATA_SYS_MA_UNITDATA_CFM_ID                               0x8029
#define PALDATA_SYS_MA_UNITDATA_RSP_ID                               0x802A
#define PALDATA_SYS_MA_UNITDATA_IND_ID                               0x802B
#define PALDATA_SYS_EAPOL_REQ_ID                                     0x802C
#define PALDATA_SYS_EAPOL_CFM_ID                                     0x802D


/* -------------------------- paldata_sys_capabilities_req -------------------------- */
typedef struct PaldataSysCapabilitiesReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
} PaldataSysCapabilitiesReq_Evt;

#define send_paldata_sys_capabilities_req(context, pid, p_appHandle) \
{ \
    PaldataSysCapabilitiesReq_Evt *evt = (PaldataSysCapabilitiesReq_Evt*) CsrPmalloc(sizeof(PaldataSysCapabilitiesReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_CAPABILITIES_REQ_ID); \
}

#define send_paldata_sys_capabilities_req_external(context, pid, p_appHandle) \
{ \
    PaldataSysCapabilitiesReq_Evt *evt = (PaldataSysCapabilitiesReq_Evt*) CsrPmalloc(sizeof(PaldataSysCapabilitiesReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_CAPABILITIES_REQ_ID); \
}

/* -------------------------- paldata_sys_capabilities_cfm -------------------------- */
typedef struct PaldataSysCapabilitiesCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint16                       commandQueueSize;
    CsrUint16                       trafficQueueSize;
} PaldataSysCapabilitiesCfm_Evt;

#define send_paldata_sys_capabilities_cfm(context, pid, p_appHandle, p_commandQueueSize, p_trafficQueueSize) \
{ \
    PaldataSysCapabilitiesCfm_Evt *evt = (PaldataSysCapabilitiesCfm_Evt*) CsrPmalloc(sizeof(PaldataSysCapabilitiesCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->commandQueueSize     = p_commandQueueSize; \
    evt->trafficQueueSize     = p_trafficQueueSize; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_CAPABILITIES_CFM_ID); \
}

#define send_paldata_sys_capabilities_cfm_external(context, pid, p_appHandle, p_commandQueueSize, p_trafficQueueSize) \
{ \
    PaldataSysCapabilitiesCfm_Evt *evt = (PaldataSysCapabilitiesCfm_Evt*) CsrPmalloc(sizeof(PaldataSysCapabilitiesCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->commandQueueSize     = p_commandQueueSize; \
    evt->trafficQueueSize     = p_trafficQueueSize; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_CAPABILITIES_CFM_ID); \
}

/* -------------------------- paldata_sys_eapol_req -------------------------- */
typedef struct PaldataSysEapolReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    CsrUint16                       frameLength;
    CsrUint8                       *frame;
    unifi_FrameFreeFunction         freeFunction;
} PaldataSysEapolReq_Evt;

#define send_paldata_sys_eapol_req(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction) \
{ \
    PaldataSysEapolReq_Evt *evt = (PaldataSysEapolReq_Evt*) CsrPmalloc(sizeof(PaldataSysEapolReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_EAPOL_REQ_ID); \
}

#define send_paldata_sys_eapol_req_external(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction) \
{ \
    PaldataSysEapolReq_Evt *evt = (PaldataSysEapolReq_Evt*) CsrPmalloc(sizeof(PaldataSysEapolReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_EAPOL_REQ_ID); \
}

/* -------------------------- paldata_sys_eapol_cfm -------------------------- */
typedef struct PaldataSysEapolCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_EapolRc                   result;
} PaldataSysEapolCfm_Evt;

#define send_paldata_sys_eapol_cfm(context, pid, p_appHandle, p_result) \
{ \
    PaldataSysEapolCfm_Evt *evt = (PaldataSysEapolCfm_Evt*) CsrPmalloc(sizeof(PaldataSysEapolCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_EAPOL_CFM_ID); \
}

#define send_paldata_sys_eapol_cfm_external(context, pid, p_appHandle, p_result) \
{ \
    PaldataSysEapolCfm_Evt *evt = (PaldataSysEapolCfm_Evt*) CsrPmalloc(sizeof(PaldataSysEapolCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_EAPOL_CFM_ID); \
}

/* -------------------------- paldata_sys_hip_req -------------------------- */
typedef struct PaldataSysHipReq_Evt
{
    FsmEvent                        common;
    CsrUint16                       mlmeCommandLength;
    CsrUint8                       *mlmeCommand;
    CsrUint16                       dataRef1Length;
    CsrUint8                       *dataRef1;
    CsrUint16                       dataRef2Length;
    CsrUint8                       *dataRef2;
} PaldataSysHipReq_Evt;

#define send_paldata_sys_hip_req(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    PaldataSysHipReq_Evt *evt = (PaldataSysHipReq_Evt*) CsrPmalloc(sizeof(PaldataSysHipReq_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_HIP_REQ_ID); \
}

#define send_paldata_sys_hip_req_external(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    PaldataSysHipReq_Evt *evt = (PaldataSysHipReq_Evt*) CsrPmalloc(sizeof(PaldataSysHipReq_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_HIP_REQ_ID); \
}

/* -------------------------- paldata_sys_hip_ind -------------------------- */
typedef struct PaldataSysHipInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       mlmeCommandLength;
    CsrUint8                       *mlmeCommand;
    CsrUint16                       dataRef1Length;
    CsrUint8                       *dataRef1;
    CsrUint16                       dataRef2Length;
    CsrUint8                       *dataRef2;
} PaldataSysHipInd_Evt;

#define send_paldata_sys_hip_ind(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    PaldataSysHipInd_Evt *evt = (PaldataSysHipInd_Evt*) CsrPmalloc(sizeof(PaldataSysHipInd_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_HIP_IND_ID); \
}

#define send_paldata_sys_hip_ind_external(context, pid, p_mlmeCommandLength, p_mlmeCommand, p_dataRef1Length, p_dataRef1, p_dataRef2Length, p_dataRef2) \
{ \
    PaldataSysHipInd_Evt *evt = (PaldataSysHipInd_Evt*) CsrPmalloc(sizeof(PaldataSysHipInd_Evt)); \
    evt->mlmeCommandLength    = p_mlmeCommandLength; \
    evt->mlmeCommand          = p_mlmeCommand; \
    evt->dataRef1Length       = p_dataRef1Length; \
    evt->dataRef1             = p_dataRef1; \
    evt->dataRef2Length       = p_dataRef2Length; \
    evt->dataRef2             = p_dataRef2; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_HIP_IND_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_req -------------------------- */
typedef struct PaldataSysMaUnitdataReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    CsrUint16                       frameLength;
    CsrUint8                       *frame;
    unifi_FrameFreeFunction         freeFunction;
    unifi_Priority                  priority;
    unifi_ServiceClass              serviceClass;
    CsrUint32                       reqIdentifier;
} PaldataSysMaUnitdataReq_Evt;

#define send_paldata_sys_ma_unitdata_req(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_priority, p_serviceClass, p_reqIdentifier) \
{ \
    PaldataSysMaUnitdataReq_Evt *evt = (PaldataSysMaUnitdataReq_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_REQ_ID); \
}

#define send_paldata_sys_ma_unitdata_req_external(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_priority, p_serviceClass, p_reqIdentifier) \
{ \
    PaldataSysMaUnitdataReq_Evt *evt = (PaldataSysMaUnitdataReq_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_REQ_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_ind -------------------------- */
typedef struct PaldataSysMaUnitdataInd_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    CsrUint16                       frameLength;
    CsrUint8                       *frame;
    unifi_FrameFreeFunction         freeFunction;
    unifi_ReceptionStatus           receptionStatus;
    unifi_Priority                  priority;
    unifi_ServiceClass              serviceClass;
} PaldataSysMaUnitdataInd_Evt;

#define send_paldata_sys_ma_unitdata_ind(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_receptionStatus, p_priority, p_serviceClass) \
{ \
    PaldataSysMaUnitdataInd_Evt *evt = (PaldataSysMaUnitdataInd_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataInd_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->receptionStatus      = p_receptionStatus; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_IND_ID); \
}

#define send_paldata_sys_ma_unitdata_ind_external(context, pid, p_appHandle, p_subscriptionHandle, p_frameLength, p_frame, p_freeFunction, p_receptionStatus, p_priority, p_serviceClass) \
{ \
    PaldataSysMaUnitdataInd_Evt *evt = (PaldataSysMaUnitdataInd_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataInd_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->frameLength          = p_frameLength; \
    evt->frame                = p_frame; \
    evt->freeFunction         = p_freeFunction; \
    evt->receptionStatus      = p_receptionStatus; \
    evt->priority             = p_priority; \
    evt->serviceClass         = p_serviceClass; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_IND_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_rsp -------------------------- */
typedef struct PaldataSysMaUnitdataRsp_Evt
{
    FsmEvent                        common;
    CsrUint8                        subscriptionHandle;
    unifi_Status                    result;
} PaldataSysMaUnitdataRsp_Evt;

#define send_paldata_sys_ma_unitdata_rsp(context, pid, p_subscriptionHandle, p_result) \
{ \
    PaldataSysMaUnitdataRsp_Evt *evt = (PaldataSysMaUnitdataRsp_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataRsp_Evt)); \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->result               = p_result; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_RSP_ID); \
}

#define send_paldata_sys_ma_unitdata_rsp_external(context, pid, p_subscriptionHandle, p_result) \
{ \
    PaldataSysMaUnitdataRsp_Evt *evt = (PaldataSysMaUnitdataRsp_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataRsp_Evt)); \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->result               = p_result; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_RSP_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_cfm -------------------------- */
typedef struct PaldataSysMaUnitdataCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Status                    result;
    unifi_TransmissionStatus        transmissionStatus;
    unifi_Priority                  providedPriority;
    unifi_ServiceClass              providedServiceClass;
    CsrUint32                       reqIdentifier;
} PaldataSysMaUnitdataCfm_Evt;

#define send_paldata_sys_ma_unitdata_cfm(context, pid, p_appHandle, p_result, p_transmissionStatus, p_providedPriority, p_providedServiceClass, p_reqIdentifier) \
{ \
    PaldataSysMaUnitdataCfm_Evt *evt = (PaldataSysMaUnitdataCfm_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    evt->transmissionStatus   = p_transmissionStatus; \
    evt->providedPriority     = p_providedPriority; \
    evt->providedServiceClass = p_providedServiceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_CFM_ID); \
}

#define send_paldata_sys_ma_unitdata_cfm_external(context, pid, p_appHandle, p_result, p_transmissionStatus, p_providedPriority, p_providedServiceClass, p_reqIdentifier) \
{ \
    PaldataSysMaUnitdataCfm_Evt *evt = (PaldataSysMaUnitdataCfm_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->result               = p_result; \
    evt->transmissionStatus   = p_transmissionStatus; \
    evt->providedPriority     = p_providedPriority; \
    evt->providedServiceClass = p_providedServiceClass; \
    evt->reqIdentifier        = p_reqIdentifier; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_CFM_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_subscribe_req -------------------------- */
typedef struct PaldataSysMaUnitdataSubscribeReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_Encapsulation             encapsulation;
    CsrUint16                       protocol;
    CsrUint32                       oui;
} PaldataSysMaUnitdataSubscribeReq_Evt;

#define send_paldata_sys_ma_unitdata_subscribe_req(context, pid, p_appHandle, p_encapsulation, p_protocol, p_oui) \
{ \
    PaldataSysMaUnitdataSubscribeReq_Evt *evt = (PaldataSysMaUnitdataSubscribeReq_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataSubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->encapsulation        = p_encapsulation; \
    evt->protocol             = p_protocol; \
    evt->oui                  = p_oui; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_SUBSCRIBE_REQ_ID); \
}

#define send_paldata_sys_ma_unitdata_subscribe_req_external(context, pid, p_appHandle, p_encapsulation, p_protocol, p_oui) \
{ \
    PaldataSysMaUnitdataSubscribeReq_Evt *evt = (PaldataSysMaUnitdataSubscribeReq_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataSubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->encapsulation        = p_encapsulation; \
    evt->protocol             = p_protocol; \
    evt->oui                  = p_oui; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_SUBSCRIBE_REQ_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_subscribe_cfm -------------------------- */
typedef struct PaldataSysMaUnitdataSubscribeCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
    unifi_SubscriptionResult        status;
    CsrUint16                       allocOffset;
} PaldataSysMaUnitdataSubscribeCfm_Evt;

#define send_paldata_sys_ma_unitdata_subscribe_cfm(context, pid, p_appHandle, p_subscriptionHandle, p_status, p_allocOffset) \
{ \
    PaldataSysMaUnitdataSubscribeCfm_Evt *evt = (PaldataSysMaUnitdataSubscribeCfm_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataSubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->status               = p_status; \
    evt->allocOffset          = p_allocOffset; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_SUBSCRIBE_CFM_ID); \
}

#define send_paldata_sys_ma_unitdata_subscribe_cfm_external(context, pid, p_appHandle, p_subscriptionHandle, p_status, p_allocOffset) \
{ \
    PaldataSysMaUnitdataSubscribeCfm_Evt *evt = (PaldataSysMaUnitdataSubscribeCfm_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataSubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    evt->status               = p_status; \
    evt->allocOffset          = p_allocOffset; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_SUBSCRIBE_CFM_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_unsubscribe_req -------------------------- */
typedef struct PaldataSysMaUnitdataUnsubscribeReq_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    CsrUint8                        subscriptionHandle;
} PaldataSysMaUnitdataUnsubscribeReq_Evt;

#define send_paldata_sys_ma_unitdata_unsubscribe_req(context, pid, p_appHandle, p_subscriptionHandle) \
{ \
    PaldataSysMaUnitdataUnsubscribeReq_Evt *evt = (PaldataSysMaUnitdataUnsubscribeReq_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataUnsubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_UNSUBSCRIBE_REQ_ID); \
}

#define send_paldata_sys_ma_unitdata_unsubscribe_req_external(context, pid, p_appHandle, p_subscriptionHandle) \
{ \
    PaldataSysMaUnitdataUnsubscribeReq_Evt *evt = (PaldataSysMaUnitdataUnsubscribeReq_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataUnsubscribeReq_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->subscriptionHandle   = p_subscriptionHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_UNSUBSCRIBE_REQ_ID); \
}

/* -------------------------- paldata_sys_ma_unitdata_unsubscribe_cfm -------------------------- */
typedef struct PaldataSysMaUnitdataUnsubscribeCfm_Evt
{
    FsmEvent                        common;
    void*                           appHandle;
    unifi_SubscriptionResult        status;
} PaldataSysMaUnitdataUnsubscribeCfm_Evt;

#define send_paldata_sys_ma_unitdata_unsubscribe_cfm(context, pid, p_appHandle, p_status) \
{ \
    PaldataSysMaUnitdataUnsubscribeCfm_Evt *evt = (PaldataSysMaUnitdataUnsubscribeCfm_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataUnsubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_UNSUBSCRIBE_CFM_ID); \
}

#define send_paldata_sys_ma_unitdata_unsubscribe_cfm_external(context, pid, p_appHandle, p_status) \
{ \
    PaldataSysMaUnitdataUnsubscribeCfm_Evt *evt = (PaldataSysMaUnitdataUnsubscribeCfm_Evt*) CsrPmalloc(sizeof(PaldataSysMaUnitdataUnsubscribeCfm_Evt)); \
    evt->appHandle            = p_appHandle; \
    evt->status               = p_status; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PALDATA_SYS_MA_UNITDATA_UNSUBSCRIBE_CFM_ID); \
}

/* -------------------------- pal_acl_data_req -------------------------- */
typedef struct PalAclDataReq_Evt
{
    FsmEvent                        common;
    CsrUint16                       dataLength;
    CsrUint8                       *data;
    CsrUint16                       logicalLinkHandle;
    CsrUint16                       aclOffset;
    unifi_FrameFreeFunction         freeFunction;
} PalAclDataReq_Evt;

#define send_pal_acl_data_req(context, pid, p_dataLength, p_data, p_logicalLinkHandle, p_aclOffset, p_freeFunction) \
{ \
    PalAclDataReq_Evt *evt = (PalAclDataReq_Evt*) CsrPmalloc(sizeof(PalAclDataReq_Evt)); \
    evt->dataLength           = p_dataLength; \
    evt->data                 = p_data; \
    evt->logicalLinkHandle    = p_logicalLinkHandle; \
    evt->aclOffset            = p_aclOffset; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_ACL_DATA_REQ_ID); \
}

#define send_pal_acl_data_req_external(context, pid, p_dataLength, p_data, p_logicalLinkHandle, p_aclOffset, p_freeFunction) \
{ \
    PalAclDataReq_Evt *evt = (PalAclDataReq_Evt*) CsrPmalloc(sizeof(PalAclDataReq_Evt)); \
    evt->dataLength           = p_dataLength; \
    evt->data                 = p_data; \
    evt->logicalLinkHandle    = p_logicalLinkHandle; \
    evt->aclOffset            = p_aclOffset; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_ACL_DATA_REQ_ID); \
}

/* -------------------------- pal_acl_data_ind -------------------------- */
typedef struct PalAclDataInd_Evt
{
    FsmEvent                        common;
    CsrUint16                       dataLength;
    CsrUint8                       *data;
    CsrUint8                        physicalLinkHandle;
    CsrUint16                       aclOffset;
    unifi_FrameFreeFunction         freeFunction;
} PalAclDataInd_Evt;

#define send_pal_acl_data_ind(context, pid, p_dataLength, p_data, p_physicalLinkHandle, p_aclOffset, p_freeFunction) \
{ \
    PalAclDataInd_Evt *evt = (PalAclDataInd_Evt*) CsrPmalloc(sizeof(PalAclDataInd_Evt)); \
    evt->dataLength           = p_dataLength; \
    evt->data                 = p_data; \
    evt->physicalLinkHandle   = p_physicalLinkHandle; \
    evt->aclOffset            = p_aclOffset; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_ACL_DATA_IND_ID); \
}

#define send_pal_acl_data_ind_external(context, pid, p_dataLength, p_data, p_physicalLinkHandle, p_aclOffset, p_freeFunction) \
{ \
    PalAclDataInd_Evt *evt = (PalAclDataInd_Evt*) CsrPmalloc(sizeof(PalAclDataInd_Evt)); \
    evt->dataLength           = p_dataLength; \
    evt->data                 = p_data; \
    evt->physicalLinkHandle   = p_physicalLinkHandle; \
    evt->aclOffset            = p_aclOffset; \
    evt->freeFunction         = p_freeFunction; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_ACL_DATA_IND_ID); \
}





#ifdef __cplusplus
}
#endif

#endif /* PALDATA_XML_SIGNALS_H */
