/* This is an autogenerated file */
/* Tag: noCheckHeader */

/*    CONFIDENTIAL */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2008. All rights reserved. */

#ifndef PALDATA_CTRL_OUTPUT_H
#define PALDATA_CTRL_OUTPUT_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef SME_API_VALIDATE

#define call_paldata_pal_ctrl_activate_cfm(context, appHandle, numDataBlocks) CSR_UNUSED(appHandle), CSR_UNUSED(numDataBlocks)
#define call_paldata_pal_ctrl_deactivate_cfm(context, appHandle) CSR_UNUSED(appHandle)
#define call_paldata_pal_ctrl_early_link_loss_ind(context, appHandle, physicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(physicalLinkHandle)
#define call_paldata_pal_ctrl_event_mask_set_cfm(context, appHandle) CSR_UNUSED(appHandle)
#define call_paldata_pal_ctrl_failed_contact_counter_read_cfm(context, appHandle, logicalLinkHandle, failedContactCounter) CSR_UNUSED(appHandle), CSR_UNUSED(logicalLinkHandle), CSR_UNUSED(failedContactCounter)
#define call_paldata_pal_ctrl_failed_contact_counter_reset_cfm(context, appHandle, logicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(logicalLinkHandle)
#define call_paldata_pal_ctrl_link_create_cfm(context, appHandle, logicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(logicalLinkHandle)
#define call_paldata_pal_ctrl_link_delete_cfm(context, appHandle, logicalLinkHandle, physicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(logicalLinkHandle), CSR_UNUSED(physicalLinkHandle)
#define call_paldata_pal_ctrl_link_flush_cfm(context, appHandle, logicalLinkHandle, flushOccured) CSR_UNUSED(appHandle), CSR_UNUSED(logicalLinkHandle), CSR_UNUSED(flushOccured)
#define call_paldata_pal_ctrl_link_lost_ind(context, appHandle, physicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(physicalLinkHandle)
#define call_paldata_pal_ctrl_link_modify_cfm(context, appHandle, logicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(logicalLinkHandle)
#define call_paldata_pal_ctrl_link_supervision_timeout_delete_cfm(context, appHandle, physicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(physicalLinkHandle)
#define call_paldata_pal_ctrl_link_supervision_timeout_modify_cfm(context, appHandle, physicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(physicalLinkHandle)
#define call_paldata_pal_ctrl_link_supervision_timeout_set_cfm(context, appHandle, physicalLinkHandle) CSR_UNUSED(appHandle), CSR_UNUSED(physicalLinkHandle)
#define call_paldata_pal_ctrl_register_cfm(context, appHandle) CSR_UNUSED(appHandle)

#else

#include "paldata_ctrl_sap/paldata_ctrl_sap.h"

#ifdef FSM_TRANSITION_LOCK

#define call_paldata_pal_ctrl_activate_cfm(context, p_appHandle, p_numDataBlocks) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_ACTIVATE_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_activate_cfm(context->externalContext, p_appHandle, p_numDataBlocks); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_deactivate_cfm(context, p_appHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_DEACTIVATE_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_deactivate_cfm(context->externalContext, p_appHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_early_link_loss_ind(context, p_appHandle, p_physicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_EARLY_LINK_LOSS_IND appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_early_link_loss_ind(context->externalContext, p_appHandle, p_physicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_event_mask_set_cfm(context, p_appHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_EVENT_MASK_SET_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_event_mask_set_cfm(context->externalContext, p_appHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_failed_contact_counter_read_cfm(context, p_appHandle, p_logicalLinkHandle, p_failedContactCounter) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_FAILED_CONTACT_COUNTER_READ_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_failed_contact_counter_read_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle, p_failedContactCounter); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_failed_contact_counter_reset_cfm(context, p_appHandle, p_logicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_FAILED_CONTACT_COUNTER_RESET_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_failed_contact_counter_reset_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_create_cfm(context, p_appHandle, p_logicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_CREATE_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_link_create_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_delete_cfm(context, p_appHandle, p_logicalLinkHandle, p_physicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_DELETE_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_link_delete_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle, p_physicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_flush_cfm(context, p_appHandle, p_logicalLinkHandle, p_flushOccured) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_FLUSH_CFM appHandle = %p flushOccured = %s) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle, \
        p_flushOccured?"TRUE":"FALSE"    ));\
    paldata_pal_ctrl_link_flush_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle, p_flushOccured); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_lost_ind(context, p_appHandle, p_physicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_LOST_IND appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_link_lost_ind(context->externalContext, p_appHandle, p_physicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_modify_cfm(context, p_appHandle, p_logicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_MODIFY_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_link_modify_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_supervision_timeout_delete_cfm(context, p_appHandle, p_physicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_SUPERVISION_TIMEOUT_DELETE_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_link_supervision_timeout_delete_cfm(context->externalContext, p_appHandle, p_physicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_supervision_timeout_modify_cfm(context, p_appHandle, p_physicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_SUPERVISION_TIMEOUT_MODIFY_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_link_supervision_timeout_modify_cfm(context->externalContext, p_appHandle, p_physicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_link_supervision_timeout_set_cfm(context, p_appHandle, p_physicalLinkHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_SUPERVISION_TIMEOUT_SET_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_link_supervision_timeout_set_cfm(context->externalContext, p_appHandle, p_physicalLinkHandle); \
    (void)CsrMutexLock(context->transitionLock);

#define call_paldata_pal_ctrl_register_cfm(context, p_appHandle) \
    (void)CsrMutexUnlock(context->transitionLock); \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_REGISTER_CFM appHandle = %p) To(env)",\
        fsm_current_process_name((context)), \
        p_appHandle    ));\
    paldata_pal_ctrl_register_cfm(context->externalContext, p_appHandle); \
    (void)CsrMutexLock(context->transitionLock);


#else

#define call_paldata_pal_ctrl_activate_cfm(context, p_appHandle, p_numDataBlocks) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_ACTIVATE_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_activate_cfm(context->externalContext, p_appHandle, p_numDataBlocks);

#define call_paldata_pal_ctrl_deactivate_cfm(context, p_appHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_DEACTIVATE_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_deactivate_cfm(context->externalContext, p_appHandle);

#define call_paldata_pal_ctrl_early_link_loss_ind(context, p_appHandle, p_physicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_EARLY_LINK_LOSS_IND) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_early_link_loss_ind(context->externalContext, p_appHandle, p_physicalLinkHandle);

#define call_paldata_pal_ctrl_event_mask_set_cfm(context, p_appHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_EVENT_MASK_SET_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_event_mask_set_cfm(context->externalContext, p_appHandle);

#define call_paldata_pal_ctrl_failed_contact_counter_read_cfm(context, p_appHandle, p_logicalLinkHandle, p_failedContactCounter) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_FAILED_CONTACT_COUNTER_READ_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_failed_contact_counter_read_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle, p_failedContactCounter);

#define call_paldata_pal_ctrl_failed_contact_counter_reset_cfm(context, p_appHandle, p_logicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_FAILED_CONTACT_COUNTER_RESET_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_failed_contact_counter_reset_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle);

#define call_paldata_pal_ctrl_link_create_cfm(context, p_appHandle, p_logicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_CREATE_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_create_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle);

#define call_paldata_pal_ctrl_link_delete_cfm(context, p_appHandle, p_logicalLinkHandle, p_physicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_DELETE_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_delete_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle, p_physicalLinkHandle);

#define call_paldata_pal_ctrl_link_flush_cfm(context, p_appHandle, p_logicalLinkHandle, p_flushOccured) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_FLUSH_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_flush_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle, p_flushOccured);

#define call_paldata_pal_ctrl_link_lost_ind(context, p_appHandle, p_physicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_LOST_IND) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_lost_ind(context->externalContext, p_appHandle, p_physicalLinkHandle);

#define call_paldata_pal_ctrl_link_modify_cfm(context, p_appHandle, p_logicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_MODIFY_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_modify_cfm(context->externalContext, p_appHandle, p_logicalLinkHandle);

#define call_paldata_pal_ctrl_link_supervision_timeout_delete_cfm(context, p_appHandle, p_physicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_SUPERVISION_TIMEOUT_DELETE_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_supervision_timeout_delete_cfm(context->externalContext, p_appHandle, p_physicalLinkHandle);

#define call_paldata_pal_ctrl_link_supervision_timeout_modify_cfm(context, p_appHandle, p_physicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_SUPERVISION_TIMEOUT_MODIFY_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_supervision_timeout_modify_cfm(context->externalContext, p_appHandle, p_physicalLinkHandle);

#define call_paldata_pal_ctrl_link_supervision_timeout_set_cfm(context, p_appHandle, p_physicalLinkHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_LINK_SUPERVISION_TIMEOUT_SET_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_link_supervision_timeout_set_cfm(context->externalContext, p_appHandle, p_physicalLinkHandle);

#define call_paldata_pal_ctrl_register_cfm(context, p_appHandle) \
    sme_trace_msc((TR_MSC, "MSC MESSAGE :: From(%s) Event(PALDATA_PAL_CTRL_REGISTER_CFM) To(env)", \
                   fsm_current_process_name((context)))); \
    paldata_pal_ctrl_register_cfm(context->externalContext, p_appHandle);


#endif
#endif

#ifdef __cplusplus
}
#endif

#endif /* PALDATA_CTRL_OUTPUT_H */

