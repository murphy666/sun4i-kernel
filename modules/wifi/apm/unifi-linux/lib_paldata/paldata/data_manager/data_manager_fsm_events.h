/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef DATA_MANAGER_XML_SIGNALS_H
#define DATA_MANAGER_XML_SIGNALS_H

#ifdef __cplusplus
extern "C" {
#endif

#define PAL_DAM_FLUSH_TIMER_ID                                       0x2100
#define PAL_DAM_EARLY_LINK_LOSS_TIMER_ID                             0x2101
#define PAL_DAM_LINK_LOSS_TIMER_ID                                   0x2102
#define PAL_DAM_HIP_DATA_BLOCK_IND_ID                                0x2103


/* -------------------------- pal_dam_hip_data_block_ind -------------------------- */
typedef struct PalDamHipDataBlockInd_Evt
{
    FsmEvent                        common;
    void*                           datablock;
} PalDamHipDataBlockInd_Evt;

#define send_pal_dam_hip_data_block_ind(context, pid, p_datablock) \
{ \
    PalDamHipDataBlockInd_Evt *evt = (PalDamHipDataBlockInd_Evt*) CsrPmalloc(sizeof(PalDamHipDataBlockInd_Evt)); \
    evt->datablock            = p_datablock; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DAM_HIP_DATA_BLOCK_IND_ID); \
}

#define send_pal_dam_hip_data_block_ind_external(context, pid, p_datablock) \
{ \
    PalDamHipDataBlockInd_Evt *evt = (PalDamHipDataBlockInd_Evt*) CsrPmalloc(sizeof(PalDamHipDataBlockInd_Evt)); \
    evt->datablock            = p_datablock; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DAM_HIP_DATA_BLOCK_IND_ID); \
}



/* -------------------------- pal_dam_flush_timer -------------------------- */
typedef struct PalDamFlushTimer_Evt
{
    FsmTimer                        common;
    CsrUint16                       logicalLinkHandle;
} PalDamFlushTimer_Evt;

#define send_pal_dam_flush_timer(context, rettimerid, timeValue, timeExtraValue, p_logicalLinkHandle) \
{ \
    PalDamFlushTimer_Evt *evt = (PalDamFlushTimer_Evt*) CsrPmalloc(sizeof(PalDamFlushTimer_Evt)); \
    evt->logicalLinkHandle    = p_logicalLinkHandle; \
    rettimerid = fsm_set_timer((context), (FsmTimer*)evt, timeValue, timeExtraValue, PAL_DAM_FLUSH_TIMER_ID);\
}

/* -------------------------- pal_dam_early_link_loss_timer -------------------------- */
typedef struct PalDamEarlyLinkLossTimer_Evt
{
    FsmTimer                        common;
    CsrUint8                        physicalLinkHandle;
} PalDamEarlyLinkLossTimer_Evt;

#define send_pal_dam_early_link_loss_timer(context, rettimerid, timeValue, timeExtraValue, p_physicalLinkHandle) \
{ \
    PalDamEarlyLinkLossTimer_Evt *evt = (PalDamEarlyLinkLossTimer_Evt*) CsrPmalloc(sizeof(PalDamEarlyLinkLossTimer_Evt)); \
    evt->physicalLinkHandle   = p_physicalLinkHandle; \
    rettimerid = fsm_set_timer((context), (FsmTimer*)evt, timeValue, timeExtraValue, PAL_DAM_EARLY_LINK_LOSS_TIMER_ID);\
}

/* -------------------------- pal_dam_link_loss_timer -------------------------- */
typedef struct PalDamLinkLossTimer_Evt
{
    FsmTimer                        common;
    CsrUint8                        physicalLinkHandle;
} PalDamLinkLossTimer_Evt;

#define send_pal_dam_link_loss_timer(context, rettimerid, timeValue, timeExtraValue, p_physicalLinkHandle) \
{ \
    PalDamLinkLossTimer_Evt *evt = (PalDamLinkLossTimer_Evt*) CsrPmalloc(sizeof(PalDamLinkLossTimer_Evt)); \
    evt->physicalLinkHandle   = p_physicalLinkHandle; \
    rettimerid = fsm_set_timer((context), (FsmTimer*)evt, timeValue, timeExtraValue, PAL_DAM_LINK_LOSS_TIMER_ID);\
}



#ifdef __cplusplus
}
#endif

#endif /* DATA_MANAGER_XML_SIGNALS_H */
