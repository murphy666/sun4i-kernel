/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef __PAL_CTRL_SAP_H__
#define __PAL_CTRL_SAP_H__

#ifdef __cplusplus
extern "C" {
#endif

/* ------------------------------------------ */
extern void pal_ctrl_activate_cfm(FsmContext* context,
                                  void* appHandle,
                                  CsrUint16 numDataBlocks);

extern void pal_ctrl_deactivate_cfm(FsmContext* context,
                                    void* appHandle);

extern void pal_ctrl_early_link_loss_ind(FsmContext* context,
                                         void* appHandle,
                                         CsrUint8 physicalLinkHandle);

extern void pal_ctrl_event_mask_set_cfm(FsmContext* context,
                                        void* appHandle);

extern void pal_ctrl_failed_contact_counter_read_cfm(FsmContext* context,
                                                     void* appHandle,
                                                     CsrUint16 logicalLinkHandle,
                                                     CsrUint16 failedContactCounter);

extern void pal_ctrl_failed_contact_counter_reset_cfm(FsmContext* context,
                                                      void* appHandle,
                                                      CsrUint16 logicalLinkHandle);

extern void pal_ctrl_link_create_cfm(FsmContext* context,
                                     void* appHandle,
                                     CsrUint16 logicalLinkHandle);

extern void pal_ctrl_link_delete_cfm(FsmContext* context,
                                     void* appHandle,
                                     CsrUint16 logicalLinkHandle,
                                     CsrUint8 physicalLinkHandle);

extern void pal_ctrl_link_flush_cfm(FsmContext* context,
                                    void* appHandle,
                                    CsrUint16 logicalLinkHandle,
                                    CsrBool flushOccured);

extern void pal_ctrl_link_lost_ind(FsmContext* context,
                                   void* appHandle,
                                   CsrUint8 physicalLinkHandle);

extern void pal_ctrl_link_modify_cfm(FsmContext* context,
                                     void* appHandle,
                                     CsrUint16 logicalLinkHandle);

extern void pal_ctrl_link_supervision_timeout_delete_cfm(FsmContext* context,
                                                         void* appHandle,
                                                         CsrUint8 physicalLinkHandle);

extern void pal_ctrl_link_supervision_timeout_modify_cfm(FsmContext* context,
                                                         void* appHandle,
                                                         CsrUint8 physicalLinkHandle);

extern void pal_ctrl_link_supervision_timeout_set_cfm(FsmContext* context,
                                                      void* appHandle,
                                                      CsrUint8 physicalLinkHandle);

extern void pal_ctrl_register_cfm(FsmContext* context,
                                  void* appHandle);


/* ------------------------------------------ */
extern void pal_ctrl_activate_req(void* context,
                                  void* appHandle);

extern void pal_ctrl_deactivate_req(void* context,
                                    void* appHandle);

extern void pal_ctrl_event_mask_set_req(void* context,
                                        void* appHandle,
                                        CsrUint32 indMask);

extern void pal_ctrl_failed_contact_counter_read_req(void* context,
                                                     void* appHandle,
                                                     CsrUint16 logicalLinkHandle);

extern void pal_ctrl_failed_contact_counter_reset_req(void* context,
                                                      void* appHandle,
                                                      CsrUint16 logicalLinkHandle);

extern void pal_ctrl_link_alive_req(void* context,
                                    void* appHandle,
                                    CsrUint8 physicalLinkHandle);

extern void pal_ctrl_link_create_req(void* context,
                                     void* appHandle,
                                     CsrUint16 logicalLinkHandle,
                                     CsrUint8 physicalLinkHandle,
                                     CsrUint16 userPriority,
                                     const unifi_MACAddress *remoteMacAddress,
                                     const unifi_MACAddress *localMacAddress,
                                     const unifi_AmpFlowSpec *txFlowSpec);

extern void pal_ctrl_link_delete_req(void* context,
                                     void* appHandle,
                                     CsrUint16 logicalLinkHandle,
                                     CsrUint8 physicalLinkHandle);

extern void pal_ctrl_link_flush_req(void* context,
                                    void* appHandle,
                                    CsrUint16 logicalLinkHandle);

extern void pal_ctrl_link_modify_req(void* context,
                                     void* appHandle,
                                     CsrUint16 logicalLinkHandle,
                                     const unifi_AmpFlowSpec *txFlowSpec);

extern void pal_ctrl_link_supervision_timeout_delete_req(void* context,
                                                         void* appHandle,
                                                         CsrUint8 physicalLinkHandle);

extern void pal_ctrl_link_supervision_timeout_modify_req(void* context,
                                                         void* appHandle,
                                                         CsrUint8 physicalLinkHandle,
                                                         CsrUint16 linkSupervisionTimeout);

extern void pal_ctrl_link_supervision_timeout_set_req(void* context,
                                                      void* appHandle,
                                                      CsrUint8 physicalLinkHandle,
                                                      CsrUint16 linkSupervisionTimeout);

extern void pal_ctrl_register_req(void* context,
                                  void* appHandle,
                                  CsrUint8 ampId,
                                  CsrUint16 dataQid);




#ifdef __cplusplus
}
#endif

#endif /* __PAL_CTRL_SAP_H__ */
