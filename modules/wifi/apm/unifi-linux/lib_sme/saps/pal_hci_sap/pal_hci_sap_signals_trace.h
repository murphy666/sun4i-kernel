/***************************************************************************
 *
 * This is an AUTOGENERATED file from genio_signal_trace_h.pl
 *
 *    CONFIDENTIAL
 *    Copyright (C) Cambridge Silicon Radio Ltd 2007. All rights reserved.
 */

/***************************************************************************
 * Description:
 *       This file is used for debugging the PAL_HCI SAP.  It contains a list
 *       of prototype functions that print the content of a signal into  
 *       human readable strings.
 *
 * Options used to generate this file:
 * perl genio_signal_trace_h.pl
 *       -o /home/bfsw/host/releases/unifi_hostsoftware_212/build/unifi-driver-212/host/lib_sme/sme/../saps/pal_hci_sap/pal_hci_sap_signals_trace.h
 *       -x /home/bfsw/host/releases/unifi_hostsoftware_212/build/unifi-driver-212/host/lib_sme/../common/amp_hci/bt_amp_hci.xml
 *       -i PAL_HCI
 *       -d 
 *
 ***************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

#ifndef PAL_HCI_SIGNAL_TRACE_H
#define PAL_HCI_SIGNAL_TRACE_H


#ifdef SME_TRACE_ENABLE

extern void trace_HciNoOperationCmd(const char* text, const FsmContext* context, const HciNoOperationCmd *HciNoOperationCmd);
extern void trace_HciCreatePhysicalLinkCmd(const char* text, const FsmContext* context, const HciCreatePhysicalLinkCmd *HciCreatePhysicalLinkCmd);
extern void trace_HciAcceptPhysicalLinkRequestCmd(const char* text, const FsmContext* context, const HciAcceptPhysicalLinkRequestCmd *HciAcceptPhysicalLinkRequestCmd);
extern void trace_HciDisconnectPhysicalLinkCmd(const char* text, const FsmContext* context, const HciDisconnectPhysicalLinkCmd *HciDisconnectPhysicalLinkCmd);
extern void trace_HciCreateLogicalLinkCmd(const char* text, const FsmContext* context, const HciCreateLogicalLinkCmd *HciCreateLogicalLinkCmd);
extern void trace_HciAcceptLogicalLinkCmd(const char* text, const FsmContext* context, const HciAcceptLogicalLinkCmd *HciAcceptLogicalLinkCmd);
extern void trace_HciDisconnectLogicalLinkCmd(const char* text, const FsmContext* context, const HciDisconnectLogicalLinkCmd *HciDisconnectLogicalLinkCmd);
extern void trace_HciLogicalLinkCancelCmd(const char* text, const FsmContext* context, const HciLogicalLinkCancelCmd *HciLogicalLinkCancelCmd);
extern void trace_HciFlowSpecModifyCmd(const char* text, const FsmContext* context, const HciFlowSpecModifyCmd *HciFlowSpecModifyCmd);
extern void trace_HciSetEventMaskCmd(const char* text, const FsmContext* context, const HciSetEventMaskCmd *HciSetEventMaskCmd);
extern void trace_HciResetCmd(const char* text, const FsmContext* context, const HciResetCmd *HciResetCmd);
extern void trace_HciFlushCmd(const char* text, const FsmContext* context, const HciFlushCmd *HciFlushCmd);
extern void trace_HciReadConnectionAcceptTimeoutCmd(const char* text, const FsmContext* context, const HciReadConnectionAcceptTimeoutCmd *HciReadConnectionAcceptTimeoutCmd);
extern void trace_HciWriteConnectionAcceptTimeoutCmd(const char* text, const FsmContext* context, const HciWriteConnectionAcceptTimeoutCmd *HciWriteConnectionAcceptTimeoutCmd);
extern void trace_HciReadLinkSupervisionTimeoutCmd(const char* text, const FsmContext* context, const HciReadLinkSupervisionTimeoutCmd *HciReadLinkSupervisionTimeoutCmd);
extern void trace_HciWriteLinkSupervisionTimeoutCmd(const char* text, const FsmContext* context, const HciWriteLinkSupervisionTimeoutCmd *HciWriteLinkSupervisionTimeoutCmd);
extern void trace_HciEnhancedFlushCmd(const char* text, const FsmContext* context, const HciEnhancedFlushCmd *HciEnhancedFlushCmd);
extern void trace_HciReadLogicalLinkAcceptTimeoutCmd(const char* text, const FsmContext* context, const HciReadLogicalLinkAcceptTimeoutCmd *HciReadLogicalLinkAcceptTimeoutCmd);
extern void trace_HciWriteLogicalLinkAcceptTimeoutCmd(const char* text, const FsmContext* context, const HciWriteLogicalLinkAcceptTimeoutCmd *HciWriteLogicalLinkAcceptTimeoutCmd);
extern void trace_HciSetEventMaskPage2Cmd(const char* text, const FsmContext* context, const HciSetEventMaskPage2Cmd *HciSetEventMaskPage2Cmd);
extern void trace_HciReadLocationDataCmd(const char* text, const FsmContext* context, const HciReadLocationDataCmd *HciReadLocationDataCmd);
extern void trace_HciWriteLocationDataCmd(const char* text, const FsmContext* context, const HciWriteLocationDataCmd *HciWriteLocationDataCmd);
extern void trace_HciReadBestEffortFlushTimeoutCmd(const char* text, const FsmContext* context, const HciReadBestEffortFlushTimeoutCmd *HciReadBestEffortFlushTimeoutCmd);
extern void trace_HciWriteBestEffortFlushTimeoutCmd(const char* text, const FsmContext* context, const HciWriteBestEffortFlushTimeoutCmd *HciWriteBestEffortFlushTimeoutCmd);
extern void trace_HciShortRangeModeCmd(const char* text, const FsmContext* context, const HciShortRangeModeCmd *HciShortRangeModeCmd);
extern void trace_HciReadLocalVersionInformationCmd(const char* text, const FsmContext* context, const HciReadLocalVersionInformationCmd *HciReadLocalVersionInformationCmd);
extern void trace_HciReadLocalSupportedCommandsCmd(const char* text, const FsmContext* context, const HciReadLocalSupportedCommandsCmd *HciReadLocalSupportedCommandsCmd);
extern void trace_HciReadDataBlockSizeCmd(const char* text, const FsmContext* context, const HciReadDataBlockSizeCmd *HciReadDataBlockSizeCmd);
extern void trace_HciReadFailedContactCounterCmd(const char* text, const FsmContext* context, const HciReadFailedContactCounterCmd *HciReadFailedContactCounterCmd);
extern void trace_HciResetFailedContactCounterCmd(const char* text, const FsmContext* context, const HciResetFailedContactCounterCmd *HciResetFailedContactCounterCmd);
extern void trace_HciReadLinkQualityCmd(const char* text, const FsmContext* context, const HciReadLinkQualityCmd *HciReadLinkQualityCmd);
extern void trace_HciReadRssiCmd(const char* text, const FsmContext* context, const HciReadRssiCmd *HciReadRssiCmd);
extern void trace_HciReadLocalAmpInfoCmd(const char* text, const FsmContext* context, const HciReadLocalAmpInfoCmd *HciReadLocalAmpInfoCmd);
extern void trace_HciReadLocalAmpAssocCmd(const char* text, const FsmContext* context, const HciReadLocalAmpAssocCmd *HciReadLocalAmpAssocCmd);
extern void trace_HciWriteRemoteAmpAssocCmd(const char* text, const FsmContext* context, const HciWriteRemoteAmpAssocCmd *HciWriteRemoteAmpAssocCmd);
extern void trace_HciReadLoopbackModeCmd(const char* text, const FsmContext* context, const HciReadLoopbackModeCmd *HciReadLoopbackModeCmd);
extern void trace_HciWriteLoopbackModeCmd(const char* text, const FsmContext* context, const HciWriteLoopbackModeCmd *HciWriteLoopbackModeCmd);
extern void trace_HciEnableAmpTestModeCmd(const char* text, const FsmContext* context, const HciEnableAmpTestModeCmd *HciEnableAmpTestModeCmd);
extern void trace_HciSetAmpTransmitPowerTestCmd(const char* text, const FsmContext* context, const HciSetAmpTransmitPowerTestCmd *HciSetAmpTransmitPowerTestCmd);
extern void trace_HciEnableAmpReceiverReportsCmd(const char* text, const FsmContext* context, const HciEnableAmpReceiverReportsCmd *HciEnableAmpReceiverReportsCmd);
extern void trace_HciTransmitterAmpTestCmd(const char* text, const FsmContext* context, const HciTransmitterAmpTestCmd *HciTransmitterAmpTestCmd);
extern void trace_HciReceiverAmpTestCmd(const char* text, const FsmContext* context, const HciReceiverAmpTestCmd *HciReceiverAmpTestCmd);
extern void trace_HciAmpTestEndCmd(const char* text, const FsmContext* context, const HciAmpTestEndCmd *HciAmpTestEndCmd);
extern void trace_HciCommandCompleteEvtParam(const char* text, CsrUint8 numHciCommandPackets, const ReturnParameters *returnParameters);
extern void trace_HciCommandStatusEvtParam(const char* text, HciStatusCode status, CsrUint8 numHciCommandPackets, HciOpcode commandOpcode);
extern void trace_HciHardwareErrorEvtParam(const char* text, CsrUint8 hardwareCode);
extern void trace_HciFlushOccurredEvtParam(const char* text, CsrUint16 handle);
extern void trace_HciLoopbackCommandEvtParam(const char* text);
extern void trace_HciDataBufferOverflowEvtParam(const char* text, HciLinkType linkType);
extern void trace_HciQosViolationEvtParam(const char* text, CsrUint16 handle);
extern void trace_HciEnhancedFlushCompleteEvtParam(const char* text, CsrUint16 handle);
extern void trace_HciPhysicalLinkCompleteEvtParam(const char* text, HciStatusCode status, CsrUint8 physicalLinkHandle);
extern void trace_HciChannelSelectEvtParam(const char* text, CsrUint8 physicalLinkHandle);
extern void trace_HciDisconnectPhysicalLinkCompleteEvtParam(const char* text, HciStatusCode status, CsrUint8 physicalLinkHandle, CsrUint8 reason);
extern void trace_HciPhysicalLinkLossEarlyWarningEvtParam(const char* text, CsrUint8 physicalLinkHandle, LinkLossReasonCode linkLossReason);
extern void trace_HciPhysicalLinkRecoveryEvtParam(const char* text, CsrUint8 physicalLinkHandle);
extern void trace_HciLogicalLinkCompleteEvtParam(const char* text, HciStatusCode status, CsrUint16 logicalLinkHandle, CsrUint8 physicalLinkHandle, CsrUint8 txFlowSpecId);
extern void trace_HciDisconnectLogicalLinkCompleteEvtParam(const char* text, HciStatusCode status, CsrUint16 logicalLinkHandle, CsrUint8 reason);
extern void trace_HciFlowSpecModifyCompleteEvtParam(const char* text, HciStatusCode status, CsrUint16 handle);
extern void trace_HciNumberOfCompletedDataBlocksEvtParam(const char* text, CsrUint16 totalNumDataBlocks, CsrUint8 numberOfHandles, CsrUint16 handle, CsrUint16 numberOfCompletedPackets, CsrUint16 numberOfCompletedBlocks);
extern void trace_HciShortRangeModeChangeCompleteEvtParam(const char* text, HciStatusCode status, CsrUint8 physicalLinkHandle, ShortRangeMode shortRangeModeState);
extern void trace_HciAmpStatusChangeEvtParam(const char* text, HciStatusCode status, AmpStatus ampStatus);
extern void trace_HciGenericAmpLinkKeyNtParam(const char* text, LinkKeyType keyType);
extern void trace_AmpTransmitPowerEvtParam(const char* text, HciStatusCode status, PowerLevel powerLevel);
extern void trace_AmpReceiverReportEvtParam(const char* text, CsrUint8 ampReport);
extern void trace_AmpStartTransmitterTestEvtParam(const char* text, HciStatusCode status, CsrUint8 powerLevel);
extern void trace_AmpStartReceiverTestEvtParam(const char* text, HciStatusCode status);

#else 
#define trace_HciNoOperationCmd(text, context, HciNoOperationCmd)
#define trace_HciCreatePhysicalLinkCmd(text, context, HciCreatePhysicalLinkCmd)
#define trace_HciAcceptPhysicalLinkRequestCmd(text, context, HciAcceptPhysicalLinkRequestCmd)
#define trace_HciDisconnectPhysicalLinkCmd(text, context, HciDisconnectPhysicalLinkCmd)
#define trace_HciCreateLogicalLinkCmd(text, context, HciCreateLogicalLinkCmd)
#define trace_HciAcceptLogicalLinkCmd(text, context, HciAcceptLogicalLinkCmd)
#define trace_HciDisconnectLogicalLinkCmd(text, context, HciDisconnectLogicalLinkCmd)
#define trace_HciLogicalLinkCancelCmd(text, context, HciLogicalLinkCancelCmd)
#define trace_HciFlowSpecModifyCmd(text, context, HciFlowSpecModifyCmd)
#define trace_HciSetEventMaskCmd(text, context, HciSetEventMaskCmd)
#define trace_HciResetCmd(text, context, HciResetCmd)
#define trace_HciFlushCmd(text, context, HciFlushCmd)
#define trace_HciReadConnectionAcceptTimeoutCmd(text, context, HciReadConnectionAcceptTimeoutCmd)
#define trace_HciWriteConnectionAcceptTimeoutCmd(text, context, HciWriteConnectionAcceptTimeoutCmd)
#define trace_HciReadLinkSupervisionTimeoutCmd(text, context, HciReadLinkSupervisionTimeoutCmd)
#define trace_HciWriteLinkSupervisionTimeoutCmd(text, context, HciWriteLinkSupervisionTimeoutCmd)
#define trace_HciEnhancedFlushCmd(text, context, HciEnhancedFlushCmd)
#define trace_HciReadLogicalLinkAcceptTimeoutCmd(text, context, HciReadLogicalLinkAcceptTimeoutCmd)
#define trace_HciWriteLogicalLinkAcceptTimeoutCmd(text, context, HciWriteLogicalLinkAcceptTimeoutCmd)
#define trace_HciSetEventMaskPage2Cmd(text, context, HciSetEventMaskPage2Cmd)
#define trace_HciReadLocationDataCmd(text, context, HciReadLocationDataCmd)
#define trace_HciWriteLocationDataCmd(text, context, HciWriteLocationDataCmd)
#define trace_HciReadBestEffortFlushTimeoutCmd(text, context, HciReadBestEffortFlushTimeoutCmd)
#define trace_HciWriteBestEffortFlushTimeoutCmd(text, context, HciWriteBestEffortFlushTimeoutCmd)
#define trace_HciShortRangeModeCmd(text, context, HciShortRangeModeCmd)
#define trace_HciReadLocalVersionInformationCmd(text, context, HciReadLocalVersionInformationCmd)
#define trace_HciReadLocalSupportedCommandsCmd(text, context, HciReadLocalSupportedCommandsCmd)
#define trace_HciReadDataBlockSizeCmd(text, context, HciReadDataBlockSizeCmd)
#define trace_HciReadFailedContactCounterCmd(text, context, HciReadFailedContactCounterCmd)
#define trace_HciResetFailedContactCounterCmd(text, context, HciResetFailedContactCounterCmd)
#define trace_HciReadLinkQualityCmd(text, context, HciReadLinkQualityCmd)
#define trace_HciReadRssiCmd(text, context, HciReadRssiCmd)
#define trace_HciReadLocalAmpInfoCmd(text, context, HciReadLocalAmpInfoCmd)
#define trace_HciReadLocalAmpAssocCmd(text, context, HciReadLocalAmpAssocCmd)
#define trace_HciWriteRemoteAmpAssocCmd(text, context, HciWriteRemoteAmpAssocCmd)
#define trace_HciReadLoopbackModeCmd(text, context, HciReadLoopbackModeCmd)
#define trace_HciWriteLoopbackModeCmd(text, context, HciWriteLoopbackModeCmd)
#define trace_HciEnableAmpTestModeCmd(text, context, HciEnableAmpTestModeCmd)
#define trace_HciSetAmpTransmitPowerTestCmd(text, context, HciSetAmpTransmitPowerTestCmd)
#define trace_HciEnableAmpReceiverReportsCmd(text, context, HciEnableAmpReceiverReportsCmd)
#define trace_HciTransmitterAmpTestCmd(text, context, HciTransmitterAmpTestCmd)
#define trace_HciReceiverAmpTestCmd(text, context, HciReceiverAmpTestCmd)
#define trace_HciAmpTestEndCmd(text, context, HciAmpTestEndCmd)
#define trace_HciCommandCompleteEvtParam(text, numHciCommandPackets, returnParameters)
#define trace_HciCommandStatusEvtParam(text, status, numHciCommandPackets, commandOpcode)
#define trace_HciHardwareErrorEvtParam(text, hardwareCode)
#define trace_HciFlushOccurredEvtParam(text, handle)
#define trace_HciLoopbackCommandEvtParam(text)
#define trace_HciDataBufferOverflowEvtParam(text, linkType)
#define trace_HciQosViolationEvtParam(text, handle)
#define trace_HciEnhancedFlushCompleteEvtParam(text, handle)
#define trace_HciPhysicalLinkCompleteEvtParam(text, status, physicalLinkHandle)
#define trace_HciChannelSelectEvtParam(text, physicalLinkHandle)
#define trace_HciDisconnectPhysicalLinkCompleteEvtParam(text, status, physicalLinkHandle, reason)
#define trace_HciPhysicalLinkLossEarlyWarningEvtParam(text, physicalLinkHandle, linkLossReason)
#define trace_HciPhysicalLinkRecoveryEvtParam(text, physicalLinkHandle)
#define trace_HciLogicalLinkCompleteEvtParam(text, status, logicalLinkHandle, physicalLinkHandle, txFlowSpecId)
#define trace_HciDisconnectLogicalLinkCompleteEvtParam(text, status, logicalLinkHandle, reason)
#define trace_HciFlowSpecModifyCompleteEvtParam(text, status, handle)
#define trace_HciNumberOfCompletedDataBlocksEvtParam(text, totalNumDataBlocks, numberOfHandles, handle, numberOfCompletedPackets, numberOfCompletedBlocks)
#define trace_HciShortRangeModeChangeCompleteEvtParam(text, status, physicalLinkHandle, shortRangeModeState)
#define trace_HciAmpStatusChangeEvtParam(text, status, ampStatus)
#define trace_HciGenericAmpLinkKeyNtParam(text, keyType)
#define trace_AmpTransmitPowerEvtParam(text, status, powerLevel)
#define trace_AmpReceiverReportEvtParam(text, ampReport)
#define trace_AmpStartTransmitterTestEvtParam(text, status, powerLevel)
#define trace_AmpStartReceiverTestEvtParam(text, status)

#endif /* SME_TRACE_ENABLE */

#endif /* PAL_HCI_SIGNAL_TRACE_H */

#ifdef __cplusplus
}
#endif
