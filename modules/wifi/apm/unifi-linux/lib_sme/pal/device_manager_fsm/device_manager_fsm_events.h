/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef DEVICE_MANAGER_XML_SIGNALS_H
#define DEVICE_MANAGER_XML_SIGNALS_H

#ifdef __cplusplus
extern "C" {
#endif

#define PAL_DM_START_REQ_ID                                          0x2201
#define PAL_DM_START_CFM_ID                                          0x2202
#define PAL_DM_MLME_ACTIVITY_START_REQ_ID                            0x2203
#define PAL_DM_MLME_ACTIVITY_START_CFM_ID                            0x2204
#define PAL_DM_MLME_ACTIVITY_COMPLETE_REQ_ID                         0x2205
#define PAL_DM_MLME_ACTIVITY_COMPLETE_CFM_ID                         0x2206
#define PAL_DM_STOP_REQ_ID                                           0x2207
#define PAL_DM_STOP_CFM_ID                                           0x2208
#define PAL_DM_ENABLE_RTS_CTS_REQ_ID                                 0x2209
#define PAL_DM_DISABLE_RTS_CTS_REQ_ID                                0x220a


/* -------------------------- pal_dm_disable_rts_cts_req -------------------------- */
typedef struct PalDmDisableRtsCtsReq_Evt
{
    FsmEvent                        common;
    CsrUint8                        handle;
} PalDmDisableRtsCtsReq_Evt;

#define send_pal_dm_disable_rts_cts_req(context, pid, p_handle) \
{ \
    PalDmDisableRtsCtsReq_Evt *evt = (PalDmDisableRtsCtsReq_Evt*) CsrPmalloc(sizeof(PalDmDisableRtsCtsReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_DISABLE_RTS_CTS_REQ_ID); \
}

#define send_pal_dm_disable_rts_cts_req_external(context, pid, p_handle) \
{ \
    PalDmDisableRtsCtsReq_Evt *evt = (PalDmDisableRtsCtsReq_Evt*) CsrPmalloc(sizeof(PalDmDisableRtsCtsReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_DISABLE_RTS_CTS_REQ_ID); \
}

/* -------------------------- pal_dm_enable_rts_cts_req -------------------------- */
typedef struct PalDmEnableRtsCtsReq_Evt
{
    FsmEvent                        common;
    CsrUint8                        handle;
} PalDmEnableRtsCtsReq_Evt;

#define send_pal_dm_enable_rts_cts_req(context, pid, p_handle) \
{ \
    PalDmEnableRtsCtsReq_Evt *evt = (PalDmEnableRtsCtsReq_Evt*) CsrPmalloc(sizeof(PalDmEnableRtsCtsReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_ENABLE_RTS_CTS_REQ_ID); \
}

#define send_pal_dm_enable_rts_cts_req_external(context, pid, p_handle) \
{ \
    PalDmEnableRtsCtsReq_Evt *evt = (PalDmEnableRtsCtsReq_Evt*) CsrPmalloc(sizeof(PalDmEnableRtsCtsReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_ENABLE_RTS_CTS_REQ_ID); \
}

/* -------------------------- pal_dm_mlme_activity_complete_req -------------------------- */
typedef struct PalDmMlmeActivityCompleteReq_Evt
{
    FsmEvent                        common;
    CsrUint8                        handle;
    CsrBool                         replyRequired;
} PalDmMlmeActivityCompleteReq_Evt;

#define send_pal_dm_mlme_activity_complete_req(context, pid, p_handle, p_replyRequired) \
{ \
    PalDmMlmeActivityCompleteReq_Evt *evt = (PalDmMlmeActivityCompleteReq_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityCompleteReq_Evt)); \
    evt->handle               = p_handle; \
    evt->replyRequired        = p_replyRequired; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_COMPLETE_REQ_ID); \
}

#define send_pal_dm_mlme_activity_complete_req_external(context, pid, p_handle, p_replyRequired) \
{ \
    PalDmMlmeActivityCompleteReq_Evt *evt = (PalDmMlmeActivityCompleteReq_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityCompleteReq_Evt)); \
    evt->handle               = p_handle; \
    evt->replyRequired        = p_replyRequired; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_COMPLETE_REQ_ID); \
}

/* -------------------------- pal_dm_mlme_activity_complete_cfm -------------------------- */
typedef struct PalDmMlmeActivityCompleteCfm_Evt
{
    FsmEvent                        common;
    unifi_Status                    mlmeActivityCompleteStatus;
    CsrUint8                        dmHandle;
} PalDmMlmeActivityCompleteCfm_Evt;

#define send_pal_dm_mlme_activity_complete_cfm(context, pid, p_mlmeActivityCompleteStatus, p_dmHandle) \
{ \
    PalDmMlmeActivityCompleteCfm_Evt *evt = (PalDmMlmeActivityCompleteCfm_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityCompleteCfm_Evt)); \
    evt->mlmeActivityCompleteStatus = p_mlmeActivityCompleteStatus; \
    evt->dmHandle             = p_dmHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_COMPLETE_CFM_ID); \
}

#define send_pal_dm_mlme_activity_complete_cfm_external(context, pid, p_mlmeActivityCompleteStatus, p_dmHandle) \
{ \
    PalDmMlmeActivityCompleteCfm_Evt *evt = (PalDmMlmeActivityCompleteCfm_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityCompleteCfm_Evt)); \
    evt->mlmeActivityCompleteStatus = p_mlmeActivityCompleteStatus; \
    evt->dmHandle             = p_dmHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_COMPLETE_CFM_ID); \
}

/* -------------------------- pal_dm_mlme_activity_start_req -------------------------- */
typedef struct PalDmMlmeActivityStartReq_Evt
{
    FsmEvent                        common;
    CsrUint8                        handle;
} PalDmMlmeActivityStartReq_Evt;

#define send_pal_dm_mlme_activity_start_req(context, pid, p_handle) \
{ \
    PalDmMlmeActivityStartReq_Evt *evt = (PalDmMlmeActivityStartReq_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityStartReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_START_REQ_ID); \
}

#define send_pal_dm_mlme_activity_start_req_external(context, pid, p_handle) \
{ \
    PalDmMlmeActivityStartReq_Evt *evt = (PalDmMlmeActivityStartReq_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityStartReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_START_REQ_ID); \
}

/* -------------------------- pal_dm_mlme_activity_start_cfm -------------------------- */
typedef struct PalDmMlmeActivityStartCfm_Evt
{
    FsmEvent                        common;
    unifi_Status                    mlmeActivityStartStatus;
    CsrUint8                        dmHandle;
} PalDmMlmeActivityStartCfm_Evt;

#define send_pal_dm_mlme_activity_start_cfm(context, pid, p_mlmeActivityStartStatus, p_dmHandle) \
{ \
    PalDmMlmeActivityStartCfm_Evt *evt = (PalDmMlmeActivityStartCfm_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityStartCfm_Evt)); \
    evt->mlmeActivityStartStatus = p_mlmeActivityStartStatus; \
    evt->dmHandle             = p_dmHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_START_CFM_ID); \
}

#define send_pal_dm_mlme_activity_start_cfm_external(context, pid, p_mlmeActivityStartStatus, p_dmHandle) \
{ \
    PalDmMlmeActivityStartCfm_Evt *evt = (PalDmMlmeActivityStartCfm_Evt*) CsrPmalloc(sizeof(PalDmMlmeActivityStartCfm_Evt)); \
    evt->mlmeActivityStartStatus = p_mlmeActivityStartStatus; \
    evt->dmHandle             = p_dmHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_MLME_ACTIVITY_START_CFM_ID); \
}

/* -------------------------- pal_dm_start_req -------------------------- */
typedef struct PalDmStartReq_Evt
{
    FsmEvent                        common;
    CsrUint8                        handle;
    CsrBool                         scanningNotNeeded;
    PalChannellist                  channelList;
} PalDmStartReq_Evt;

#define send_pal_dm_start_req(context, pid, p_handle, p_scanningNotNeeded, p_channelList) \
{ \
    PalDmStartReq_Evt *evt = (PalDmStartReq_Evt*) CsrPmalloc(sizeof(PalDmStartReq_Evt)); \
    evt->handle               = p_handle; \
    evt->scanningNotNeeded    = p_scanningNotNeeded; \
    evt->channelList          = p_channelList; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_START_REQ_ID); \
}

#define send_pal_dm_start_req_external(context, pid, p_handle, p_scanningNotNeeded, p_channelList) \
{ \
    PalDmStartReq_Evt *evt = (PalDmStartReq_Evt*) CsrPmalloc(sizeof(PalDmStartReq_Evt)); \
    evt->handle               = p_handle; \
    evt->scanningNotNeeded    = p_scanningNotNeeded; \
    evt->channelList          = p_channelList; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_START_REQ_ID); \
}

/* -------------------------- pal_dm_start_cfm -------------------------- */
typedef struct PalDmStartCfm_Evt
{
    FsmEvent                        common;
    unifi_Status                    startStatus;
    CsrUint8                        dmHandle;
} PalDmStartCfm_Evt;

#define send_pal_dm_start_cfm(context, pid, p_startStatus, p_dmHandle) \
{ \
    PalDmStartCfm_Evt *evt = (PalDmStartCfm_Evt*) CsrPmalloc(sizeof(PalDmStartCfm_Evt)); \
    evt->startStatus          = p_startStatus; \
    evt->dmHandle             = p_dmHandle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_START_CFM_ID); \
}

#define send_pal_dm_start_cfm_external(context, pid, p_startStatus, p_dmHandle) \
{ \
    PalDmStartCfm_Evt *evt = (PalDmStartCfm_Evt*) CsrPmalloc(sizeof(PalDmStartCfm_Evt)); \
    evt->startStatus          = p_startStatus; \
    evt->dmHandle             = p_dmHandle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_START_CFM_ID); \
}

/* -------------------------- pal_dm_stop_req -------------------------- */
typedef struct PalDmStopReq_Evt
{
    FsmEvent                        common;
    CsrUint8                        handle;
} PalDmStopReq_Evt;

#define send_pal_dm_stop_req(context, pid, p_handle) \
{ \
    PalDmStopReq_Evt *evt = (PalDmStopReq_Evt*) CsrPmalloc(sizeof(PalDmStopReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_STOP_REQ_ID); \
}

#define send_pal_dm_stop_req_external(context, pid, p_handle) \
{ \
    PalDmStopReq_Evt *evt = (PalDmStopReq_Evt*) CsrPmalloc(sizeof(PalDmStopReq_Evt)); \
    evt->handle               = p_handle; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_STOP_REQ_ID); \
}

/* -------------------------- pal_dm_stop_cfm -------------------------- */
typedef struct PalDmStopCfm_Evt
{
    FsmEvent                        common;
    unifi_Status                    stopStatus;
} PalDmStopCfm_Evt;

#define send_pal_dm_stop_cfm(context, pid, p_stopStatus) \
{ \
    PalDmStopCfm_Evt *evt = (PalDmStopCfm_Evt*) CsrPmalloc(sizeof(PalDmStopCfm_Evt)); \
    evt->stopStatus           = p_stopStatus; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_DM_STOP_CFM_ID); \
}

#define send_pal_dm_stop_cfm_external(context, pid, p_stopStatus) \
{ \
    PalDmStopCfm_Evt *evt = (PalDmStopCfm_Evt*) CsrPmalloc(sizeof(PalDmStopCfm_Evt)); \
    evt->stopStatus           = p_stopStatus; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_DM_STOP_CFM_ID); \
}





#ifdef __cplusplus
}
#endif

#endif /* DEVICE_MANAGER_XML_SIGNALS_H */
