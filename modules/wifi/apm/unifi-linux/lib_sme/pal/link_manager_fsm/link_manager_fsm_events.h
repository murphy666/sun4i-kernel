/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef LINK_MANAGER_XML_SIGNALS_H
#define LINK_MANAGER_XML_SIGNALS_H

#ifdef __cplusplus
extern "C" {
#endif

#define PAL_LINK_CONNECT_REQ_ID                                      0x2300
#define PAL_LINK_CONNECT_CFM_ID                                      0x2301
#define PAL_LINK_AUTHENTICATE_REQ_ID                                 0x2302
#define PAL_LINK_AUTHENTICATE_CFM_ID                                 0x2303
#define PAL_LINK_DISCONNECT_REQ_ID                                   0x2304
#define PAL_LINK_DISCONNECT_CFM_ID                                   0x2305
#define PAL_LINK_DISCONNECT_IND_ID                                   0x2306
#define PAL_LINK_START_REQ_ID                                        0x2307
#define PAL_LINK_START_CFM_ID                                        0x2308
#define PAL_LINK_STOP_REQ_ID                                         0x2309
#define PAL_LINK_STOP_CFM_ID                                         0x230a
#define PAL_LINK_LINK_SUPERVISION_REQUEST_REQ_ID                     0x230b
#define PAL_LINK_LINK_SUPERVISION_RESPONSE_IND_ID                    0x230c
#define PAL_LINK_TIMER_ID                                            0x230d
#define PAL_SECURITY_HANDSHAKE_TIMER_ID                              0x230e


/* -------------------------- pal_link_authenticate_req -------------------------- */
typedef struct PalLinkAuthenticateReq_Evt
{
    FsmEvent                        common;
} PalLinkAuthenticateReq_Evt;

#define send_pal_link_authenticate_req(context, pid) \
{ \
    PalLinkAuthenticateReq_Evt *evt = (PalLinkAuthenticateReq_Evt*) CsrPmalloc(sizeof(PalLinkAuthenticateReq_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_AUTHENTICATE_REQ_ID); \
}

#define send_pal_link_authenticate_req_external(context, pid) \
{ \
    PalLinkAuthenticateReq_Evt *evt = (PalLinkAuthenticateReq_Evt*) CsrPmalloc(sizeof(PalLinkAuthenticateReq_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_AUTHENTICATE_REQ_ID); \
}

/* -------------------------- pal_link_authenticate_cfm -------------------------- */
typedef struct PalLinkAuthenticateCfm_Evt
{
    FsmEvent                        common;
    unifi_Status                    authenticateStatus;
} PalLinkAuthenticateCfm_Evt;

#define send_pal_link_authenticate_cfm(context, pid, p_authenticateStatus) \
{ \
    PalLinkAuthenticateCfm_Evt *evt = (PalLinkAuthenticateCfm_Evt*) CsrPmalloc(sizeof(PalLinkAuthenticateCfm_Evt)); \
    evt->authenticateStatus   = p_authenticateStatus; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_AUTHENTICATE_CFM_ID); \
}

#define send_pal_link_authenticate_cfm_external(context, pid, p_authenticateStatus) \
{ \
    PalLinkAuthenticateCfm_Evt *evt = (PalLinkAuthenticateCfm_Evt*) CsrPmalloc(sizeof(PalLinkAuthenticateCfm_Evt)); \
    evt->authenticateStatus   = p_authenticateStatus; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_AUTHENTICATE_CFM_ID); \
}

/* -------------------------- pal_link_connect_req -------------------------- */
typedef struct PalLinkConnectReq_Evt
{
    FsmEvent                        common;
    PalRole                         role;
} PalLinkConnectReq_Evt;

#define send_pal_link_connect_req(context, pid, p_role) \
{ \
    PalLinkConnectReq_Evt *evt = (PalLinkConnectReq_Evt*) CsrPmalloc(sizeof(PalLinkConnectReq_Evt)); \
    evt->role                 = p_role; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_CONNECT_REQ_ID); \
}

#define send_pal_link_connect_req_external(context, pid, p_role) \
{ \
    PalLinkConnectReq_Evt *evt = (PalLinkConnectReq_Evt*) CsrPmalloc(sizeof(PalLinkConnectReq_Evt)); \
    evt->role                 = p_role; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_CONNECT_REQ_ID); \
}

/* -------------------------- pal_link_connect_cfm -------------------------- */
typedef struct PalLinkConnectCfm_Evt
{
    FsmEvent                        common;
    unifi_Status                    connectStatus;
    CsrBool                         peerQosSupport;
} PalLinkConnectCfm_Evt;

#define send_pal_link_connect_cfm(context, pid, p_connectStatus, p_peerQosSupport) \
{ \
    PalLinkConnectCfm_Evt *evt = (PalLinkConnectCfm_Evt*) CsrPmalloc(sizeof(PalLinkConnectCfm_Evt)); \
    evt->connectStatus        = p_connectStatus; \
    evt->peerQosSupport       = p_peerQosSupport; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_CONNECT_CFM_ID); \
}

#define send_pal_link_connect_cfm_external(context, pid, p_connectStatus, p_peerQosSupport) \
{ \
    PalLinkConnectCfm_Evt *evt = (PalLinkConnectCfm_Evt*) CsrPmalloc(sizeof(PalLinkConnectCfm_Evt)); \
    evt->connectStatus        = p_connectStatus; \
    evt->peerQosSupport       = p_peerQosSupport; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_CONNECT_CFM_ID); \
}

/* -------------------------- pal_link_disconnect_req -------------------------- */
typedef struct PalLinkDisconnectReq_Evt
{
    FsmEvent                        common;
} PalLinkDisconnectReq_Evt;

#define send_pal_link_disconnect_req(context, pid) \
{ \
    PalLinkDisconnectReq_Evt *evt = (PalLinkDisconnectReq_Evt*) CsrPmalloc(sizeof(PalLinkDisconnectReq_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_DISCONNECT_REQ_ID); \
}

#define send_pal_link_disconnect_req_external(context, pid) \
{ \
    PalLinkDisconnectReq_Evt *evt = (PalLinkDisconnectReq_Evt*) CsrPmalloc(sizeof(PalLinkDisconnectReq_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_DISCONNECT_REQ_ID); \
}

/* -------------------------- pal_link_disconnect_ind -------------------------- */
typedef struct PalLinkDisconnectInd_Evt
{
    FsmEvent                        common;
    unifi_Status                    disconnectStatus;
} PalLinkDisconnectInd_Evt;

#define send_pal_link_disconnect_ind(context, pid, p_disconnectStatus) \
{ \
    PalLinkDisconnectInd_Evt *evt = (PalLinkDisconnectInd_Evt*) CsrPmalloc(sizeof(PalLinkDisconnectInd_Evt)); \
    evt->disconnectStatus     = p_disconnectStatus; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_DISCONNECT_IND_ID); \
}

#define send_pal_link_disconnect_ind_external(context, pid, p_disconnectStatus) \
{ \
    PalLinkDisconnectInd_Evt *evt = (PalLinkDisconnectInd_Evt*) CsrPmalloc(sizeof(PalLinkDisconnectInd_Evt)); \
    evt->disconnectStatus     = p_disconnectStatus; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_DISCONNECT_IND_ID); \
}

/* -------------------------- pal_link_disconnect_cfm -------------------------- */
typedef struct PalLinkDisconnectCfm_Evt
{
    FsmEvent                        common;
    unifi_Status                    disconnectStatus;
} PalLinkDisconnectCfm_Evt;

#define send_pal_link_disconnect_cfm(context, pid, p_disconnectStatus) \
{ \
    PalLinkDisconnectCfm_Evt *evt = (PalLinkDisconnectCfm_Evt*) CsrPmalloc(sizeof(PalLinkDisconnectCfm_Evt)); \
    evt->disconnectStatus     = p_disconnectStatus; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_DISCONNECT_CFM_ID); \
}

#define send_pal_link_disconnect_cfm_external(context, pid, p_disconnectStatus) \
{ \
    PalLinkDisconnectCfm_Evt *evt = (PalLinkDisconnectCfm_Evt*) CsrPmalloc(sizeof(PalLinkDisconnectCfm_Evt)); \
    evt->disconnectStatus     = p_disconnectStatus; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_DISCONNECT_CFM_ID); \
}

/* -------------------------- pal_link_link_supervision_request_req -------------------------- */
typedef struct PalLinkLinkSupervisionRequestReq_Evt
{
    FsmEvent                        common;
} PalLinkLinkSupervisionRequestReq_Evt;

#define send_pal_link_link_supervision_request_req(context, pid) \
{ \
    PalLinkLinkSupervisionRequestReq_Evt *evt = (PalLinkLinkSupervisionRequestReq_Evt*) CsrPmalloc(sizeof(PalLinkLinkSupervisionRequestReq_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_LINK_SUPERVISION_REQUEST_REQ_ID); \
}

#define send_pal_link_link_supervision_request_req_external(context, pid) \
{ \
    PalLinkLinkSupervisionRequestReq_Evt *evt = (PalLinkLinkSupervisionRequestReq_Evt*) CsrPmalloc(sizeof(PalLinkLinkSupervisionRequestReq_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_LINK_SUPERVISION_REQUEST_REQ_ID); \
}

/* -------------------------- pal_link_link_supervision_response_ind -------------------------- */
typedef struct PalLinkLinkSupervisionResponseInd_Evt
{
    FsmEvent                        common;
} PalLinkLinkSupervisionResponseInd_Evt;

#define send_pal_link_link_supervision_response_ind(context, pid) \
{ \
    PalLinkLinkSupervisionResponseInd_Evt *evt = (PalLinkLinkSupervisionResponseInd_Evt*) CsrPmalloc(sizeof(PalLinkLinkSupervisionResponseInd_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_LINK_SUPERVISION_RESPONSE_IND_ID); \
}

#define send_pal_link_link_supervision_response_ind_external(context, pid) \
{ \
    PalLinkLinkSupervisionResponseInd_Evt *evt = (PalLinkLinkSupervisionResponseInd_Evt*) CsrPmalloc(sizeof(PalLinkLinkSupervisionResponseInd_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_LINK_SUPERVISION_RESPONSE_IND_ID); \
}

/* -------------------------- pal_link_start_req -------------------------- */
typedef struct PalLinkStartReq_Evt
{
    FsmEvent                        common;
    CsrUint8                        handle;
    unifi_DataBlock                 linkKey;
} PalLinkStartReq_Evt;

#define send_pal_link_start_req(context, pid, p_handle, p_linkKey) \
{ \
    PalLinkStartReq_Evt *evt = (PalLinkStartReq_Evt*) CsrPmalloc(sizeof(PalLinkStartReq_Evt)); \
    evt->handle               = p_handle; \
    evt->linkKey              = p_linkKey; \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_START_REQ_ID); \
}

#define send_pal_link_start_req_external(context, pid, p_handle, p_linkKey) \
{ \
    PalLinkStartReq_Evt *evt = (PalLinkStartReq_Evt*) CsrPmalloc(sizeof(PalLinkStartReq_Evt)); \
    evt->handle               = p_handle; \
    evt->linkKey              = p_linkKey; \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_START_REQ_ID); \
}

/* -------------------------- pal_link_start_cfm -------------------------- */
typedef struct PalLinkStartCfm_Evt
{
    FsmEvent                        common;
} PalLinkStartCfm_Evt;

#define send_pal_link_start_cfm(context, pid) \
{ \
    PalLinkStartCfm_Evt *evt = (PalLinkStartCfm_Evt*) CsrPmalloc(sizeof(PalLinkStartCfm_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_START_CFM_ID); \
}

#define send_pal_link_start_cfm_external(context, pid) \
{ \
    PalLinkStartCfm_Evt *evt = (PalLinkStartCfm_Evt*) CsrPmalloc(sizeof(PalLinkStartCfm_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_START_CFM_ID); \
}

/* -------------------------- pal_link_stop_req -------------------------- */
typedef struct PalLinkStopReq_Evt
{
    FsmEvent                        common;
} PalLinkStopReq_Evt;

#define send_pal_link_stop_req(context, pid) \
{ \
    PalLinkStopReq_Evt *evt = (PalLinkStopReq_Evt*) CsrPmalloc(sizeof(PalLinkStopReq_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_STOP_REQ_ID); \
}

#define send_pal_link_stop_req_external(context, pid) \
{ \
    PalLinkStopReq_Evt *evt = (PalLinkStopReq_Evt*) CsrPmalloc(sizeof(PalLinkStopReq_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_STOP_REQ_ID); \
}

/* -------------------------- pal_link_stop_cfm -------------------------- */
typedef struct PalLinkStopCfm_Evt
{
    FsmEvent                        common;
} PalLinkStopCfm_Evt;

#define send_pal_link_stop_cfm(context, pid) \
{ \
    PalLinkStopCfm_Evt *evt = (PalLinkStopCfm_Evt*) CsrPmalloc(sizeof(PalLinkStopCfm_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, PAL_LINK_STOP_CFM_ID); \
}

#define send_pal_link_stop_cfm_external(context, pid) \
{ \
    PalLinkStopCfm_Evt *evt = (PalLinkStopCfm_Evt*) CsrPmalloc(sizeof(PalLinkStopCfm_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, PAL_LINK_STOP_CFM_ID); \
}



/* -------------------------- pal_link_timer -------------------------- */
typedef struct PalLinkTimer_Evt
{
    FsmTimer                        common;
} PalLinkTimer_Evt;

#define send_pal_link_timer(context, rettimerid, timeValue, timeExtraValue) \
{ \
    rettimerid = fsm_set_timer((context), (FsmTimer*)NULL, timeValue, timeExtraValue, PAL_LINK_TIMER_ID);\
}

/* -------------------------- pal_security_handshake_timer -------------------------- */
typedef struct PalSecurityHandshakeTimer_Evt
{
    FsmTimer                        common;
} PalSecurityHandshakeTimer_Evt;

#define send_pal_security_handshake_timer(context, rettimerid, timeValue, timeExtraValue) \
{ \
    rettimerid = fsm_set_timer((context), (FsmTimer*)NULL, timeValue, timeExtraValue, PAL_SECURITY_HANDSHAKE_TIMER_ID);\
}



#ifdef __cplusplus
}
#endif

#endif /* LINK_MANAGER_XML_SIGNALS_H */
