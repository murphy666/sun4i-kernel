/* This is an autogenerated file */
/* Tag: noCheckHeader */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2009. All rights reserved. */
/* */
/*   Refer to LICENSE.txt included with this source for details on the */
/*   license terms. */

#ifndef UNIFI_DRIVER_XML_SIGNALS_H
#define UNIFI_DRIVER_XML_SIGNALS_H

#ifdef __cplusplus
extern "C" {
#endif

#define UNIFI_RESET_REQ_ID                                           0x3B01
#define UNIFI_RESET_CFM_ID                                           0x3B02
#define UNIFI_FW_WATCHDOG_TIMER_ID                                   0x3B03
#define UNIFI_GENERAL_TIMER_ID                                       0x3B04


/* -------------------------- unifi_reset_req -------------------------- */
typedef struct UnifiResetReq_Evt
{
    FsmEvent                        common;
} UnifiResetReq_Evt;

#define send_unifi_reset_req(context, pid) \
{ \
    UnifiResetReq_Evt *evt = (UnifiResetReq_Evt*) CsrPmalloc(sizeof(UnifiResetReq_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_RESET_REQ_ID); \
}

#define send_unifi_reset_req_external(context, pid) \
{ \
    UnifiResetReq_Evt *evt = (UnifiResetReq_Evt*) CsrPmalloc(sizeof(UnifiResetReq_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_RESET_REQ_ID); \
}

/* -------------------------- unifi_reset_cfm -------------------------- */
typedef struct UnifiResetCfm_Evt
{
    FsmEvent                        common;
} UnifiResetCfm_Evt;

#define send_unifi_reset_cfm(context, pid) \
{ \
    UnifiResetCfm_Evt *evt = (UnifiResetCfm_Evt*) CsrPmalloc(sizeof(UnifiResetCfm_Evt)); \
    fsm_send_event(context, (FsmEvent*)evt, pid, UNIFI_RESET_CFM_ID); \
}

#define send_unifi_reset_cfm_external(context, pid) \
{ \
    UnifiResetCfm_Evt *evt = (UnifiResetCfm_Evt*) CsrPmalloc(sizeof(UnifiResetCfm_Evt)); \
    fsm_send_event_external(context, (FsmEvent*)evt, pid, UNIFI_RESET_CFM_ID); \
}



/* -------------------------- unifi_fw_watchdog_timer -------------------------- */
typedef struct UnifiFwWatchdogTimer_Evt
{
    FsmTimer                        common;
} UnifiFwWatchdogTimer_Evt;

#define send_unifi_fw_watchdog_timer(context, rettimerid, timeValue, timeExtraValue) \
{ \
    rettimerid = fsm_set_timer((context), (FsmTimer*)NULL, timeValue, timeExtraValue, UNIFI_FW_WATCHDOG_TIMER_ID);\
}

/* -------------------------- unifi_general_timer -------------------------- */
typedef struct UnifiGeneralTimer_Evt
{
    FsmTimer                        common;
} UnifiGeneralTimer_Evt;

#define send_unifi_general_timer(context, rettimerid, timeValue, timeExtraValue) \
{ \
    rettimerid = fsm_set_timer((context), (FsmTimer*)NULL, timeValue, timeExtraValue, UNIFI_GENERAL_TIMER_ID);\
}



#ifdef __cplusplus
}
#endif

#endif /* UNIFI_DRIVER_XML_SIGNALS_H */
