/* This is an autogenerated */
/* Tag: noCheckHeader */

/*    CONFIDENTIAL */
/*    Copyright (C) Cambridge Silicon Radio Ltd 2008. All rights reserved. */

#ifndef SMEIO_TYPE_TRACE_H
#define SMEIO_TYPE_TRACE_H

#ifdef __cplusplus
extern "C" {
#endif

#include "abstractions/osa.h"

#ifdef SME_TRACE_TYPES_ENABLE
#ifdef SME_TRACE_ENABLE

#include "sme_trace/sme_trace_utils.h"

#include "hostio/hip_fsm_types.h"
#include "smeio/smeio_fsm_types.h"
#include "coex_fsm/coex_fsm_types.h"
#include "hip_proxy_fsm/hip_proxy_fsm_types.h"
#include "link_quality_fsm/link_quality_fsm_types.h"
#include "network_selector_fsm/network_selector_fsm_types.h"
#include "power_manager_fsm/power_manager_fsm_types.h"
#include "qos_fsm/qos_fsm_types.h"
#include "scan_manager_fsm/scan_manager_fsm_types.h"
#include "security_manager_fsm/security_manager_fsm_types.h"
#include "sme_core_fsm/sme_core_fsm_types.h"
#include "unifi_driver_fsm/unifi_driver_fsm_types.h"
#ifdef CCX_VARIANT
#include "ccx_fsm/ccx_fsm_types.h"
#endif /* CCX_VARIANT */



/* hip_signals.xml */
extern const char *trace_AntennaId(AntennaId index);
extern const char *trace_AuthenticationType(AuthenticationType index);
extern const char *trace_BssType(BssType index);
extern const char *trace_BlackoutSource(BlackoutSource index);
extern const char *trace_BlackoutType(BlackoutType index);
extern const char *trace_BlockAckPolicy(BlockAckPolicy index);
extern const char *trace_BootLoaderOperation(BootLoaderOperation index);
extern const char *trace_ChannelOffset(ChannelOffset index);
extern const char *trace_ChannelSwitchMode(ChannelSwitchMode index);
extern const char *trace_CoexistenceDirection(CoexistenceDirection index);
extern const char *trace_ConnectionStatus(ConnectionStatus index);
extern const char *trace_Initiator(Initiator index);
extern const char *trace_Interface(Interface index);
extern const char *trace_KeyType(KeyType index);
extern const char *trace_LinkMarginCategory(LinkMarginCategory index);
extern const char *trace_LoaderOperation(LoaderOperation index);
extern const char *trace_MibStatus(MibStatus index);
extern const char *trace_MeasurementCategory(MeasurementCategory index);
extern const char *trace_MemorySpace(MemorySpace index);
extern const char *trace_NeighborReportRequestType(NeighborReportRequestType index);
extern const char *trace_PeriodicSchedulingMode(PeriodicSchedulingMode index);
extern const char *trace_PowerManagementMode(PowerManagementMode index);
extern const char *trace_Priority(Priority index);
extern const char *trace_Processor(Processor index);
extern const char *trace_ProtectType(ProtectType index);
extern const char *trace_ReasonCode(ReasonCode index);
extern const char *trace_ReceptionStatus(ReceptionStatus index);
extern const char *trace_ResultCode(ResultCode index);
extern const char *trace_RoutingInformation(RoutingInformation index);
extern const char *trace_ScanType(ScanType index);
extern const char *trace_ServiceClass(ServiceClass index);
extern const char *trace_SnifferReceptionStatus(SnifferReceptionStatus index);
extern const char *trace_SourceType(SourceType index);
extern const char *trace_SymbolId(SymbolId index);
extern const char *trace_TransmissionStatus(TransmissionStatus index);
extern const char *trace_UnitDataFilterMode(UnitDataFilterMode index);
extern const char *trace_UpdateType(UpdateType index);
extern const char *trace_ZeroBit(ZeroBit index);

/* smeio_signals.xml */
extern const char *trace_unifi_80211NetworkType(unifi_80211NetworkType index);
extern const char *trace_unifi_80211PrivacyMode(unifi_80211PrivacyMode index);
extern const char *trace_unifi_80211dTrustLevel(unifi_80211dTrustLevel index);
extern const char *trace_unifi_AppValueId(unifi_AppValueId index);
extern const char *trace_unifi_AuthMode(unifi_AuthMode index);
extern const char *trace_unifi_BSSType(unifi_BSSType index);
extern const char *trace_unifi_BasicUsability(unifi_BasicUsability index);
extern const char *trace_unifi_BtDeviceLogicalChannels(unifi_BtDeviceLogicalChannels index);
extern const char *trace_unifi_BtDeviceMode(unifi_BtDeviceMode index);
extern const char *trace_unifi_BtDeviceRole(unifi_BtDeviceRole index);
extern const char *trace_unifi_CoexDirection(unifi_CoexDirection index);
extern const char *trace_unifi_CoexScheme(unifi_CoexScheme index);
extern const char *trace_unifi_ControlIndication(unifi_ControlIndication index);
extern const char *trace_unifi_D3AutoScanMode(unifi_D3AutoScanMode index);
extern const char *trace_unifi_EapolRc(unifi_EapolRc index);
extern const char *trace_unifi_Encapsulation(unifi_Encapsulation index);
extern const char *trace_unifi_EncryptionMode(unifi_EncryptionMode index);
extern const char *trace_unifi_FirmwareDriverInterface(unifi_FirmwareDriverInterface index);
extern const char *trace_unifi_HostPowerMode(unifi_HostPowerMode index);
extern const char *trace_unifi_IEEE80211Reason(unifi_IEEE80211Reason index);
extern const char *trace_unifi_IEEE80211Result(unifi_IEEE80211Result index);
extern const char *trace_unifi_IndicationsMask(unifi_IndicationsMask index);
extern const char *trace_unifi_KeyType(unifi_KeyType index);
extern const char *trace_unifi_ListAction(unifi_ListAction index);
extern const char *trace_unifi_LowPowerMode(unifi_LowPowerMode index);
extern const char *trace_unifi_MediaStatus(unifi_MediaStatus index);
extern const char *trace_unifi_MediaTypeMask(unifi_MediaTypeMask index);
extern const char *trace_unifi_PacketFilterMode(unifi_PacketFilterMode index);
extern const char *trace_unifi_PortAction(unifi_PortAction index);
extern const char *trace_unifi_PowerSaveLevel(unifi_PowerSaveLevel index);
extern const char *trace_unifi_Priority(unifi_Priority index);
extern const char *trace_unifi_ProtocolDirection(unifi_ProtocolDirection index);
extern const char *trace_unifi_QoSControl(unifi_QoSControl index);
extern const char *trace_unifi_RadioIF(unifi_RadioIF index);
extern const char *trace_unifi_ReceptionStatus(unifi_ReceptionStatus index);
extern const char *trace_unifi_RegulatoryDomain(unifi_RegulatoryDomain index);
extern const char *trace_unifi_RoamReason(unifi_RoamReason index);
extern const char *trace_unifi_ScanType(unifi_ScanType index);
extern const char *trace_unifi_ServiceClass(unifi_ServiceClass index);
extern const char *trace_unifi_Status(unifi_Status index);
extern const char *trace_unifi_SubscriptionResult(unifi_SubscriptionResult index);
extern const char *trace_unifi_TrafficConfigType(unifi_TrafficConfigType index);
extern const char *trace_unifi_TrafficPacketType(unifi_TrafficPacketType index);
extern const char *trace_unifi_TrafficType(unifi_TrafficType index);
extern const char *trace_unifi_TransmissionStatus(unifi_TransmissionStatus index);
extern const char *trace_unifi_TspecCtrlMask(unifi_TspecCtrlMask index);
extern const char *trace_unifi_TspecResultCode(unifi_TspecResultCode index);
extern const char *trace_unifi_WmmMode(unifi_WmmMode index);
extern const char *trace_unifi_WmmQosInfoMask(unifi_WmmQosInfoMask index);

/* coex_signals.xml */

/* hip_proxy_signals.xml */

/* link_quality_signals.xml */
extern const char *trace_unifi_RoamingBand(unifi_RoamingBand index);

/* network_selector_signals.xml */

/* power_manager_signals.xml */

/* qos_signals.xml */

/* scan_manager_signals.xml */
extern const char *trace_unifi_IECapabilityMask(unifi_IECapabilityMask index);
extern const char *trace_unifi_ScanStopCondition(unifi_ScanStopCondition index);
extern const char *trace_unifi_ScanUpdateAction(unifi_ScanUpdateAction index);

/* security_manager_signals.xml */

/* sme_core_signals.xml */

/* unifi_driver_signals.xml */

/* ccx_signals.xml */


#endif /* SME_TRACE_ENABLE */
#endif /* SME_TRACE_TYPES_ENABLE */

#ifdef __cplusplus
}
#endif

#endif /* SMEIO_TYPE_TRACE_H */

